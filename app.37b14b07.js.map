{"version":3,"sources":["collision_classes/vector.ts","collision_classes/line.ts","collision_classes/rect.ts","collision_classes/collisionEvent.ts","collision_classes/shadowRay.ts","collision_classes/collision.ts","collision_classes/ray.ts","render_classes/projectLine.ts","gui_classes/GUIDraw.ts","collision_classes/camera.ts","collision_classes/lamp.ts","gui_classes/ContextElement.ts","gui_classes/ContextMenu.ts","gui_classes/SVGStyle.ts","gui_classes/DrawState.ts","gui_classes/DrawContext.ts","gui_classes/MainHelper.ts","render_classes/material.ts","render_classes/lampMaterial.ts","gui_classes/SVGDrag.ts","gui_classes/PanelFunctions.ts","gui_classes/SideMenu.ts","app.ts"],"names":[],"mappings":"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AAL,CAAe,cAAf,CAA8B,mBAA9B,EAAmD,KAAnD;AACD,OAjDsE,CAkDvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACD;AAED;;;;;;;;uDAKuC,CACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;;iCAEoB,GAAS;AAC5B,aAAO,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAY,CAAC,GAAG,GAAJ,GAAU,GAAV,GAAgB,CAAnC;AACD;;;;;;AAzQH,OAAA,CAAA,GAAA,GAAA,GAAA;;;;;;;;;;;;;;;ICPa;AAMX,uBAAY,GAAZ,EAAyB,GAAzB,EAAsC,IAAtC,EAAoD,EAApD,EAA8D;AAAA;;AAC5D,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,MAAL,GAAc,CAAC,SAAD,CAAd;AACD;;;;8BAEa;AACZ,aAAO,KAAK,IAAZ;AACD;;;4BAEc,MAAY;AACzB,WAAK,IAAL,GAAY,IAAZ;AACD;;;8BAEgB,QAAgB;AAC/B,WAAK,MAAL,GAAc,MAAM,CAAC,MAAP,GAAgB,CAAhB,GAAoB,CAAC,SAAD,CAApB,GAAkC,MAAhD;AACD;;;gCAEkB,KAAW;AAC5B,WAAK,GAAL,GAAW,GAAX;AACD;;;iC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","file":"app.37b14b07.js","sourceRoot":"..\\..\\src","sourcesContent":["export class Vector {\r\n  private x: number;\r\n  private y: number;\r\n  constructor(x: number, y: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  public getX() {\r\n    return this.x;\r\n  }\r\n\r\n  public getY() {\r\n    return this.y;\r\n  }\r\n\r\n  public getLength() {\r\n    return Math.sqrt(this.x ** 2 + this.y ** 2);\r\n  }\r\n\r\n  public normalize() {\r\n    if (this.getLength() != 0) this.mult(1 / this.getLength());\r\n  }\r\n\r\n  public getNormalized(): Vector {\r\n    let v = new Vector(this.x, this.y);\r\n    v.normalize();\r\n    return v;\r\n  }\r\n\r\n  public invert() {\r\n    this.mult(-1);\r\n  }\r\n\r\n  public getInverted() {\r\n    return new Vector(-this.x, -this.y);\r\n  }\r\n\r\n  public getNormal() {\r\n    return this.getRotated(-Math.PI / 2);\r\n  }\r\n\r\n  public isSame(vec2: Vector) {\r\n    return this.x == vec2.x && this.y == vec2.y;\r\n  }\r\n\r\n  public isZero() {\r\n    return this.x == 0 && this.y == 0;\r\n  }\r\n\r\n  public add(x: number, y: number) {\r\n    this.x += x;\r\n    this.y += y;\r\n  }\r\n\r\n  public getAdded(x: number, y: number) {\r\n    return new Vector(this.x + x, this.y + y);\r\n  }\r\n\r\n  public addVector(vector: Vector) {\r\n    this.x += vector.x;\r\n    this.y += vector.y;\r\n  }\r\n\r\n  public getAddedVector(vector: Vector) {\r\n    return new Vector(this.x + vector.x, this.y + vector.y);\r\n  }\r\n\r\n  public mult(factor: number) {\r\n    this.x *= factor;\r\n    this.y *= factor;\r\n  }\r\n\r\n  public getMult(factor: number) {\r\n    return new Vector(this.x * factor, this.y * factor);\r\n  }\r\n\r\n  public rotate(angle: number) {\r\n    this.x = this.x * Math.cos(angle) - this.y * Math.sin(angle);\r\n    this.y = this.x * Math.sin(angle) + this.y * Math.cos(angle);\r\n  }\r\n\r\n  public getRotated(angle: number) {\r\n    return new Vector(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle));\r\n  }\r\n\r\n  public getDot(v: Vector) {\r\n    return this.getX() * v.getX() + this.getY() * v.getY();\r\n  }\r\n\r\n  public getDotAngleBetween(v: Vector) {\r\n    return Math.acos(this.getDot(v) / (this.getLength() * v.getLength()));\r\n  }\r\n\r\n  public getAngleBetween(v: Vector): number {\r\n    //return Math.atan2(this.y - v.y, this.x - v.x);\r\n    return Math.atan2(this.y, this.x) - Math.atan2(v.y, v.x);\r\n  }\r\n\r\n  public isParallel(vec2: Vector) {\r\n    if (this.isZero() || vec2.isZero()) {\r\n      return false;\r\n    }\r\n    // x1 = a * x2\r\n    // y1 = a * y2\r\n    // x1 = y1/y2 * x2\r\n    let v1 = this.getNormalized();\r\n    let v2 = vec2.getNormalized();\r\n    let v3 = v2.getInverted();\r\n    return v1.isSame(v2) || v1.isSame(v3);\r\n  }\r\n}\r\n","import { DrawContext } from \"src/gui_classes/DrawContext\";\r\nimport { Vector } from \"./vector\";\r\n\r\nexport class Line {\r\n  private pos: Vector;\r\n  private dir: Vector;\r\n  private len: number;\r\n\r\n  constructor(position: Vector, direction: Vector, length: number) {\r\n    this.pos = position;\r\n    this.dir = direction;\r\n    this.len = length;\r\n  }\r\n\r\n  public getPosition() {\r\n    return this.pos;\r\n  }\r\n\r\n  public getEndPosition() {\r\n    return this.pos.getAddedVector(this.dir.getMult(this.len));\r\n  }\r\n\r\n  public getDirection() {\r\n    return this.dir;\r\n  }\r\n\r\n  public getLength() {\r\n    return this.len;\r\n  }\r\n\r\n  public getRealLength() {\r\n    return this.dir.getMult(this.len).getLength();\r\n  }\r\n\r\n  public draw(ctx: DrawContext, id: string = \"\", dashed = false) {\r\n    let posDir = this.getEndPosition();\r\n    ctx.addLine(this.pos.getX(), this.pos.getY(), posDir.getX(), posDir.getY(), id, dashed);\r\n  }\r\n\r\n  public getNormal() {\r\n    return this.dir.getNormal();\r\n  }\r\n\r\n  /**\r\n   * @description Calculates the collision point between this line and line2\r\n   * @param  {Line} line2 Line to check collision with\r\n   * @returns {[number | undefined, number | undefined, number, number, Line, Line]} Array with collision data\r\n   */\r\n  getIntersect(line2: Line): [number | undefined, number | undefined, number, number, Line, Line] {\r\n    if (this.dir.isParallel(line2.getDirection())) {\r\n      //If parallel, don't return a collision\r\n      return [, , 1, 1, this, line2];\r\n    } else {\r\n      //Else, calculate the collision point and values\r\n\r\n      //Calculate direction of collision point from this lines start\r\n      let dir =\r\n        (line2.dir.getX() * (this.pos.getY() - line2.pos.getY()) - line2.dir.getY() * (this.pos.getX() - line2.pos.getX())) /\r\n        (line2.dir.getY() * this.dir.getX() - line2.dir.getX() * this.dir.getY());\r\n\r\n      //Calculate the x and y of the collision\r\n      let x = this.pos.getX() + dir * this.dir.getX();\r\n      let y = this.pos.getY() + dir * this.dir.getY();\r\n\r\n      //Calculate the scalars for the length at which the position happend for both lines\r\n      let t1 = 0;\r\n      let t2 = 0;\r\n      //switch betwenn x and y to reduce errors\r\n      if (Math.abs(this.dir.getX()) > 0.1) {\r\n        t1 = (x - this.pos.getX()) / this.dir.getX();\r\n      } else {\r\n        t1 = (y - this.pos.getY()) / this.dir.getY();\r\n      }\r\n      if (Math.abs(line2.dir.getX()) > 0.1) {\r\n        t2 = (x - line2.pos.getX()) / line2.dir.getX();\r\n      } else {\r\n        t2 = (y - line2.pos.getY()) / line2.dir.getY();\r\n      }\r\n\r\n      //Round values to 4 numbers after the point\r\n      x = Math.round(x * 1000) / 1000;\r\n      y = Math.round(y * 1000) / 1000;\r\n      t1 = Math.round(t1 * 1000) / 1000;\r\n      t2 = Math.round(t2 * 1000) / 1000;\r\n\r\n      return [x, y, t1, t2, this, line2];\r\n    }\r\n  }\r\n}\r\n","import { Vector } from \"./vector\";\r\nimport { Line } from \"./line\";\r\nimport { DrawContext } from \"../gui_classes/DrawContext\";\r\nimport { CANVAS, CONTEXT_MENU } from \"../app\";\r\nimport { ContextMenuAttributes } from \"../gui_classes/ContextMenu\";\r\nimport { Material } from \"../render_classes/material\";\r\n\r\nexport class Rect {\r\n  private pos: Vector;\r\n  private width: number;\r\n  private height: number;\r\n  private rot: number;\r\n  private material: Material;\r\n  private vertecies: Vector[];\r\n  private lines: Line[];\r\n  private id: string;\r\n  private name: string;\r\n  private delete: boolean;\r\n  private collisionIndex: number;\r\n\r\n  constructor(position: Vector, width: number, height: number, rotation: number, material: Material, id: string, name: string = \"\") {\r\n    this.pos = position;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.rot = rotation;\r\n    this.material = material;\r\n    this.id = id;\r\n    this.name = name;\r\n    this.delete = false;\r\n    this.collisionIndex = 1;\r\n    this.vertecies = [];\r\n    this.lines = [];\r\n    this.updateLines();\r\n  }\r\n\r\n  public updateLines() {\r\n    this.lines = [];\r\n    this.vertecies = [];\r\n\r\n    this.vertecies.push(new Vector(-this.width / 2, -this.height / 2).getRotated(this.rot).getAddedVector(this.pos));\r\n    this.vertecies.push(new Vector(this.width / 2, -this.height / 2).getRotated(this.rot).getAddedVector(this.pos));\r\n    this.vertecies.push(new Vector(this.width / 2, this.height / 2).getRotated(this.rot).getAddedVector(this.pos));\r\n    this.vertecies.push(new Vector(-this.width / 2, this.height / 2).getRotated(this.rot).getAddedVector(this.pos));\r\n\r\n    this.lines.push(new Line(this.vertecies[0], new Vector(this.width, 0).getRotated(this.rot), 1));\r\n    this.lines.push(new Line(this.vertecies[1], new Vector(0, this.height).getRotated(this.rot), 1));\r\n    this.lines.push(new Line(this.vertecies[2], new Vector(-this.width, 0).getRotated(this.rot), 1));\r\n    this.lines.push(new Line(this.vertecies[3], new Vector(0, -this.height).getRotated(this.rot), 1));\r\n  }\r\n\r\n  public getDelete() {\r\n    return this.delete;\r\n  }\r\n\r\n  public getLines() {\r\n    return this.lines;\r\n  }\r\n\r\n  public getPosition() {\r\n    return this.pos;\r\n  }\r\n\r\n  public getWidth() {\r\n    return this.width;\r\n  }\r\n\r\n  public getHeight() {\r\n    return this.height;\r\n  }\r\n\r\n  public getMaterial() {\r\n    return this.material;\r\n  }\r\n\r\n  public getColor() {\r\n    return this.material.getColor();\r\n  }\r\n\r\n  public getRotation() {\r\n    return this.rot;\r\n  }\r\n\r\n  public setRotation(rotation: number) {\r\n    this.rot = rotation;\r\n  }\r\n\r\n  public getId() {\r\n    return this.id;\r\n  }\r\n\r\n  public getName() {\r\n    return this.name;\r\n  }\r\n\r\n  getCollisionIndex() {\r\n    return this.collisionIndex;\r\n  }\r\n\r\n  getAndIncrementCollisionIndex() {\r\n    return this.collisionIndex++;\r\n  }\r\n\r\n  public draw(ctx: DrawContext) {\r\n    let i = 0;\r\n    for (let l of this.lines) {\r\n      //new Line(l.getPosition(), l.getNormal(), 1).draw(ctx, this.id + \"_\" + (i++).toString()); // Normals\r\n      //l.draw(ctx, this.id + \"_\" + (i++).toString());\r\n    }\r\n    ctx.pushStyle();\r\n    ctx.setFill(this.getColor());\r\n    ctx.addRect(\r\n      this.vertecies[0].getX(),\r\n      this.vertecies[0].getY(),\r\n      this.vertecies[1].getX(),\r\n      this.vertecies[1].getY(),\r\n      this.vertecies[2].getX(),\r\n      this.vertecies[2].getY(),\r\n      this.vertecies[3].getX(),\r\n      this.vertecies[3].getY(),\r\n      this.id,\r\n      this\r\n    );\r\n    ctx.popStyle();\r\n    this.collisionIndex = 1;\r\n  }\r\n\r\n  move(x: number, y: number, dx: number, dy: number) {\r\n    //this.pos.add(dx, dy);\r\n    this.pos = new Vector(x - CANVAS.getBoundingClientRect().left, y - CANVAS.getBoundingClientRect().top);\r\n    this.updateLines();\r\n  }\r\n\r\n  rotate(x: number, y: number, dx: number, dy: number) {\r\n    this.rot = -Math.atan2(x - CANVAS.getBoundingClientRect().left - this.pos.getX(), y - CANVAS.getBoundingClientRect().top - this.pos.getY());\r\n    this.updateLines();\r\n  }\r\n\r\n  doFunction(func: string, val: number, e: any) {\r\n    if (func == \"rotate\") {\r\n      this.rotate(e.x, e.y, e.movementX, e.movementY);\r\n    } else if (func == \"rotation\") {\r\n      let numberPick = document.getElementById(\"numberPicker_rotation\") as HTMLInputElement;\r\n      if (numberPick == null) {\r\n      } else {\r\n        numberPick.oninput = () => {\r\n          this.rot = (Number(numberPick.value) / 180) * Math.PI;\r\n          this.updateLines();\r\n        };\r\n      }\r\n    } else if (func == \"color\") {\r\n      let colPick = document.getElementById(\"colorPicker_color\") as HTMLInputElement;\r\n      if (colPick == null) {\r\n        colPick = document.createElement(\"input\");\r\n        colPick.type = \"color\";\r\n        colPick.className = \"contextElement_input\";\r\n        colPick.id = \"colorPicker_color\";\r\n        colPick.value = this.getColor();\r\n        colPick.select();\r\n        colPick.oninput = () => {\r\n          this.material.setColor(colPick.value);\r\n        };\r\n        CONTEXT_MENU.firstChild?.appendChild(colPick);\r\n      } else {\r\n        colPick.oninput = () => {\r\n          this.material.setColor(colPick.value);\r\n        };\r\n      }\r\n      // if (colPick != null) {\r\n      //   this.color = colPick.value;\r\n      // }\r\n    } else if (func == \"diffuse\") {\r\n      let numberPick = document.getElementById(\"numberPicker_diffuse\") as HTMLInputElement;\r\n      if (numberPick == null) {\r\n      } else {\r\n        numberPick.oninput = () => {\r\n          if (Number(numberPick.value) < 0) {\r\n            numberPick.value = \"0\";\r\n          } else if (Number(numberPick.value) > 100) {\r\n            numberPick.value = \"100\";\r\n          }\r\n          this.material.setDiffuse(Number(numberPick.value) / 100);\r\n          this.updateLines();\r\n        };\r\n      }\r\n    } else if (func == \"specular\") {\r\n      let numberPick = document.getElementById(\"numberPicker_specular\") as HTMLInputElement;\r\n      if (numberPick == null) {\r\n      } else {\r\n        numberPick.oninput = () => {\r\n          if (Number(numberPick.value) < 0) {\r\n            numberPick.value = \"0\";\r\n          } else if (Number(numberPick.value) > 100) {\r\n            numberPick.value = \"100\";\r\n          }\r\n          this.material.setSpecular(Number(numberPick.value) / 100);\r\n          this.updateLines();\r\n        };\r\n      }\r\n    } else if (func == \"width\") {\r\n      let numberPick = document.getElementById(\"numberPicker_width\") as HTMLInputElement;\r\n      if (numberPick == null) {\r\n      } else {\r\n        numberPick.oninput = () => {\r\n          this.width = Number(numberPick.value);\r\n          this.updateLines();\r\n        };\r\n      }\r\n    } else if (func == \"height\") {\r\n      let numberPick = document.getElementById(\"numberPicker_height\") as HTMLInputElement;\r\n      if (numberPick == null) {\r\n      } else {\r\n        numberPick.oninput = () => {\r\n          this.height = Number(numberPick.value);\r\n          this.updateLines();\r\n        };\r\n      }\r\n    } else if (func == \"delete\") {\r\n      this.delete = true;\r\n    }\r\n  }\r\n\r\n  getContextAttributes(): ContextMenuAttributes[] {\r\n    return [\r\n      { name: \"Color\", id: \"color\", type: \"color\", value: this.getColor() },\r\n      { name: \"Diffuse (%)\", id: \"diffuse\", type: \"number\", value: this.material.getDiffuse() * 100 },\r\n      { name: \"Specular (%)\", id: \"specular\", type: \"number\", value: this.material.getSpecular() * 100 },\r\n      { name: \"Rotation\", id: \"rotation\", type: \"number\", value: Math.round((this.rot / Math.PI) * 180) },\r\n      { name: \"Width\", id: \"width\", type: \"number\", value: this.width },\r\n      { name: \"Height\", id: \"height\", type: \"number\", value: this.height },\r\n      { name: \"Remove\", id: \"delete\", type: \"\", value: 0 },\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * @description Calculates the collision point between this rect and line\r\n   * @param  {Line} line Line to check collision with\r\n   * @returns {[number | undefined, number | undefined, number, number, Line, Line]} Array with collision data\r\n   */\r\n  getIntersect(line: Line): [number, number, number, number, Line, Line][] {\r\n    let result: [number, number, number, number, Line, Line][] = [];\r\n    for (let l of this.lines) {\r\n      let [x, y, t1, t2, line1, line2] = l.getIntersect(line);\r\n      if (x != undefined && y != undefined && t1 != undefined && t2 != undefined && t1 > 0 && t1 < l.getLength() && t2 > 0 && t2 < line.getLength()) {\r\n        result.push([x, y, t1, t2, line1, line2]);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","import { Line } from \"./line\";\r\nimport { Ray } from \"./ray\";\r\nimport { Rect } from \"./rect\";\r\nimport { Vector } from \"./vector\";\r\n/**\r\n * @description Collision Event base class\r\n * @param  {Line} ray The Ray for the collision calculation\r\n * @param  {Line|Rect} object The Line or Rect for the collision calculation\r\n */\r\nexport class CollisionEvent {\r\n  protected line: Line;\r\n  protected object: Line | Rect;\r\n  protected lines: Line[];\r\n\r\n  constructor(ray: Line, object: Line | Rect) {\r\n    this.line = ray;\r\n    this.object = object;\r\n    this.lines = [];\r\n  }\r\n\r\n  getLine() {\r\n    return this.line;\r\n  }\r\n\r\n  getObject() {\r\n    return this.object;\r\n  }\r\n\r\n  getNewLines() {\r\n    return this.lines;\r\n  }\r\n\r\n  calculateCollision() {}\r\n}\r\n/**\r\n * @description Collision Event for Ray-Line collisions\r\n * @param  {Line} ray The Ray for the collision calculation\r\n * @param  {Line} object The Line for the collision calculation\r\n */\r\nexport class CollisionLineEvent extends CollisionEvent {\r\n  protected object: Line;\r\n\r\n  constructor(ray: Line, object: Line) {\r\n    super(ray, object);\r\n    this.object = object;\r\n    this.lines = [];\r\n    this.calculateCollision();\r\n  }\r\n  /**\r\n   * @description Calculates the collision point between a ray and a Line\r\n   */\r\n  calculateCollision() {\r\n    this.lines = [];\r\n    let [x, y, t1, t2] = this.object.getIntersect(this.line);\r\n    if (\r\n      x != undefined &&\r\n      y != undefined &&\r\n      t1 != undefined &&\r\n      t1 > 0 &&\r\n      t1 < this.object.getLength() &&\r\n      t2 != undefined &&\r\n      t2 > 0 &&\r\n      t2 < this.line.getLength()\r\n    ) {\r\n      let tempLine = new Line(this.line.getPosition(), this.line.getDirection(), t2);\r\n      if (tempLine.getRealLength() > 2) {\r\n        this.line = tempLine;\r\n        this.lines.push(\r\n          new Line(new Vector(x, y), this.object.getNormal().getRotated(this.object.getNormal().getAngleBetween(this.line.getDirection().getInverted())), 1)\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @description Collision Event for Ray-Rect collisions\r\n * @param  {Line} ray The Ray for the collision calculation\r\n * @param  {Line} object The Rect for the collision calculation\r\n */\r\nexport class CollisionRectEvent extends CollisionEvent {\r\n  protected object: Rect;\r\n\r\n  constructor(ray: Line, object: Rect) {\r\n    super(ray, object);\r\n    this.object = object;\r\n    this.lines = [];\r\n    this.calculateCollision();\r\n  }\r\n\r\n  calculateCollision() {\r\n    this.lines = [];\r\n  }\r\n}\r\n","import { height, width } from \"../app\";\r\nimport { DrawContext } from \"../gui_classes/DrawContext\";\r\nimport { Line } from \"./line\";\r\nimport { Rect } from \"./rect\";\r\nimport { Vector } from \"./vector\";\r\nimport { CollisionEvent, CollisionLineEvent, CollisionRectEvent } from \"./collisionEvent\";\r\nimport { Lamp } from \"./lamp\";\r\nimport { Ray } from \"./ray\";\r\n\r\nexport class ShadowRay {\r\n  private line: Line;\r\n  private blocked: boolean;\r\n  private lamp: Lamp;\r\n  private id: string;\r\n\r\n  constructor(position: Vector, direction: Vector, lamp: Lamp, id: string) {\r\n    this.line = new Line(position, direction, 1);\r\n    this.lamp = lamp;\r\n    this.blocked = false;\r\n    this.id = id;\r\n  }\r\n\r\n  public getBlocked() {\r\n    return this.blocked;\r\n  }\r\n\r\n  public getLamp() {\r\n    return this.lamp;\r\n  }\r\n\r\n  public getLine() {\r\n    return this.line;\r\n  }\r\n\r\n  public draw(ctx: DrawContext, onlyCollision = false) {\r\n    if (!onlyCollision) this.line.draw(ctx, this.id, true);\r\n  }\r\n\r\n  private reset() {\r\n    this.line = new Line(this.line.getPosition(), this.line.getDirection(), 1);\r\n  }\r\n\r\n  public recalculateRay(collisionCollection: (Line | Rect)[], lamps: Lamp[]) {\r\n    this.reset();\r\n    let collisionLines: Line[] | undefined;\r\n    let colEvent: CollisionLineEvent | CollisionRectEvent;\r\n    for (let el of collisionCollection) {\r\n      if (el instanceof Line) {\r\n        colEvent = new CollisionLineEvent(this.line, el);\r\n        if (colEvent.getNewLines().length > 0) {\r\n          this.line = colEvent.getLine();\r\n          collisionLines = colEvent.getNewLines();\r\n        }\r\n      } else if (el instanceof Rect) {\r\n        let intersects = el.getIntersect(this.line);\r\n        if (intersects != null && intersects.length > 0) {\r\n          for (let [x, y, t1, t2, line1, line2] of intersects) {\r\n            if (t2 != undefined && t2 > 0 && t2 < this.line.getLength()) {\r\n              let tempLine = new Line(this.line.getPosition(), this.line.getDirection(), t2);\r\n              if (tempLine.getRealLength() > 0) {\r\n                this.line = tempLine;\r\n                collisionLines = [\r\n                  new Line(new Vector(x, y), line1.getNormal().getRotated(line1.getNormal().getAngleBetween(this.line.getDirection().getInverted())), 1),\r\n                ];\r\n                this.blocked = true;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { height, Main, width } from \"../app\";\r\nimport { DrawContext } from \"../gui_classes/DrawContext\";\r\nimport { Line } from \"./line\";\r\nimport { Rect } from \"./rect\";\r\nimport { Vector } from \"./vector\";\r\nimport { CollisionEvent, CollisionLineEvent, CollisionRectEvent } from \"./collisionEvent\";\r\nimport { Lamp } from \"./lamp\";\r\nimport { ShadowRay } from \"./shadowRay\";\r\nimport { Ray } from \"./ray\";\r\n\r\nexport class Collision {\r\n  private pos: Vector;\r\n  private id: string;\r\n\r\n  private prevRay: Ray;\r\n  private depth: number;\r\n  private maxDepth: number;\r\n  private nextRay: null | Ray;\r\n  private shadowRays: ShadowRay[];\r\n  private collisionObject: Rect;\r\n  private collisionLine: Line;\r\n  private collisionAxis: Vector;\r\n  private reflectingIntensities: [number, number, number];\r\n\r\n  constructor(position: Vector, collisionObject: Rect, collisionLine: Line, collisionAxis: Vector, depth: number, maxDepth: number, prevRay: Ray, id: string) {\r\n    this.pos = position;\r\n    this.id = id;\r\n    this.prevRay = prevRay;\r\n    this.maxDepth = maxDepth;\r\n    this.depth = depth;\r\n    this.nextRay = null;\r\n    this.shadowRays = [];\r\n    this.collisionObject = collisionObject;\r\n    this.collisionLine = collisionLine;\r\n    this.collisionAxis = collisionAxis;\r\n    this.reflectingIntensities = [0, 0, 0];\r\n  }\r\n\r\n  public getNextRay() {\r\n    return this.nextRay;\r\n  }\r\n\r\n  public getShadowRays() {\r\n    return this.shadowRays;\r\n  }\r\n\r\n  public getId() {\r\n    return this.id;\r\n  }\r\n\r\n  public getDepth() {\r\n    return this.depth;\r\n  }\r\n\r\n  public getMaxDepth() {\r\n    return this.maxDepth;\r\n  }\r\n\r\n  public getReflectingIntensities() {\r\n    return this.reflectingIntensities;\r\n  }\r\n\r\n  public draw(ctx: DrawContext, onlyCollision = false) {\r\n    if (onlyCollision) {\r\n      if (ctx.getDrawState().getDisplayColisionData()) {\r\n        ctx.pushStyle();\r\n        ctx.setFill(ctx.getDrawState().getDarkMode() ? \"white\" : \"black\");\r\n        let arrEnd = this.pos.getAddedVector(this.collisionAxis.getNormalized().getMult(50));\r\n        let arcStart = this.pos.getAddedVector(this.collisionAxis.getNormalized().getMult(40));\r\n        if (this.nextRay != undefined) {\r\n          let arcEnd1 = this.pos.getAddedVector(this.nextRay.getLine().getDirection().getNormalized().getMult(40));\r\n          let arcEnd2 = this.pos.getAddedVector(this.prevRay.getLine().getDirection().getNormalized().getMult(-40));\r\n          let arcMid = arcEnd1.getAddedVector(arcEnd2.getInverted());\r\n          let arcMid1 = arcStart.getAddedVector(arcMid.getMult(0.25));\r\n          let arcMid2 = arcStart.getAddedVector(arcMid.getMult(-0.25));\r\n\r\n          let testAngle = this.collisionLine.getNormal().getAngleBetween(this.prevRay.getLine().getDirection().getInverted()) - Math.PI / 2;\r\n          testAngle = testAngle > Math.PI ? -Math.PI + (testAngle - Math.PI) : testAngle;\r\n          //console.log(this.id, testAngle);\r\n          let sf = testAngle > Math.PI || testAngle < 0 ? 1 : 0;\r\n          // if (arcEnd1.getX() > arcEnd2.getX() && this.collisionAxis.getNormalized().getY() > 0) {\r\n          //   sl = 1 - sl;\r\n          // } else if (arcEnd1.getY() < arcEnd2.getY() && this.collisionAxis.getNormalized().getX() > 0) {\r\n          //   sl = 1 - sl;\r\n          // }\r\n          let lf = testAngle > Math.PI / 2 ? 1 : 0;\r\n          //ctx.addArc(arcEnd2.getX(), arcEnd2.getY(), 40, 40, 0, 0, sf, arcEnd1.getX(), arcEnd1.getY(), this.id + \"_arc1\");\r\n          ctx.addArc2(arcEnd2, arcMid2, arcMid1, arcEnd1, this.id + \"_arc2\");\r\n          //ctx.addArc(arcStart.getX(), arcStart.getY(), 40, 40, 0, 0, 1 - sl, arcEnd2.getX(), arcEnd2.getY(), this.id + \"_arc2\");\r\n          if (arcMid.getLength() > 15) {\r\n            let arcMid1 = arcStart.getAddedVector(this.collisionAxis.getNormalized().getMult(-20)).getAddedVector(arcMid.getMult(-0.15));\r\n            let arcMid2 = arcStart.getAddedVector(this.collisionAxis.getNormalized().getMult(-20)).getAddedVector(arcMid.getMult(0.15));\r\n            ctx.addText(arcMid1.getX() - 1, arcMid1.getY(), \"ϕ\", this.id + \"_arc_text1\");\r\n            ctx.addText(arcMid2.getX() - 1, arcMid2.getY(), \"ϕ\", this.id + \"_arc_text2\");\r\n          }\r\n        }\r\n\r\n        ctx.addArrow(this.pos.getX(), this.pos.getY(), arrEnd.getX(), arrEnd.getY(), this.id + \"_arr\");\r\n        ctx.addText(arrEnd.getX() - 5, arrEnd.getAddedVector(this.collisionAxis.getNormalized().getMult(5)).getY(), \"n\", this.id + \"_arr_text\");\r\n        ctx.popStyle();\r\n      }\r\n\r\n      ctx.pushStyle();\r\n      let rgb = this.reflectingIntensities;\r\n      ctx.setFill(`rgb(${rgb[0]},${rgb[1]},${rgb[2]})`);\r\n      ctx.addCollision(this.pos.getX(), this.pos.getY(), 10, this.id, this);\r\n      ctx.setFill((rgb[0] + rgb[1] + rgb[2]) / 3 > 128 ? \"black\" : \"white\");\r\n      ctx.addText(this.pos.getX(), this.pos.getY() + 4, this.collisionObject.getName() + this.collisionObject.getAndIncrementCollisionIndex(), this.id + \"_t\");\r\n      ctx.popStyle();\r\n    }\r\n    ctx.pushStyle();\r\n    ctx.setStroke(ctx.getDrawState().getShadowRayColor());\r\n    for (let i = 0; Main.Instance.getCTX().getDrawState().getDisplayShadowRays() && i < this.shadowRays.length; i++) {\r\n      this.shadowRays[i].draw(ctx, onlyCollision);\r\n    }\r\n    ctx.popStyle();\r\n\r\n    this.nextRay?.draw(ctx, onlyCollision);\r\n  }\r\n\r\n  private reset() {\r\n    this.nextRay = null;\r\n    this.shadowRays = [];\r\n  }\r\n  /**\r\n   * @description Recursive method to calculate all rays and ray collisions\r\n   * @param  {(Line|Rect)[]} collisionCollection Array with objects to collide with\r\n   * @param  {Lamp[]} lamps Array with all Lamps for shadow rays\r\n   */\r\n  public recalculateRay(collisionCollection: (Line | Rect)[], lamps: Lamp[]) {\r\n    this.reset();\r\n\r\n    //If collision happend, do shadow rays, and further recursive rays\r\n\r\n    //Shadow Rays\r\n    for (let i = 0; i < lamps.length; i++) {\r\n      if (lamps[i].getOn() == false) continue;\r\n      this.shadowRays.push(\r\n        new ShadowRay(this.pos, lamps[i].getPosition().getAddedVector(this.pos.getInverted()), lamps[i], this.id + \"_sr\" + i + \"_\" + this.depth.toString())\r\n      );\r\n      this.shadowRays[this.shadowRays.length - 1].recalculateRay(collisionCollection, lamps);\r\n    }\r\n\r\n    if (this.depth < this.maxDepth) {\r\n      //If no axis could be found, do mirror-like reflecting\r\n      this.nextRay = new Ray(\r\n        this.pos,\r\n        this.collisionLine.getDirection(),\r\n        this.depth + 1,\r\n        this.maxDepth,\r\n        this.prevRay.getId() + \"_\" + (this.depth + 1).toString()\r\n      );\r\n      this.nextRay.recalculateRay(collisionCollection, lamps);\r\n\r\n      //this.recalculateReflectingIntensities(difAngle, specAngle);\r\n    }\r\n    this.recalculateReflectingIntensities();\r\n  }\r\n\r\n  /**\r\n   * @description Method to return the colors of ray collisions\r\n   * @param  {number} difAngle Angle of diffuse ray\r\n   * @param  {number} specAngle Angle of specular ray\r\n   */\r\n  public recalculateReflectingIntensities() {\r\n    let r = 0;\r\n    let g = 0;\r\n    let b = 0;\r\n    let diffuse = [0, 0, 0];\r\n    let specular = [0, 0, 0];\r\n    let reflect = [0, 0, 0];\r\n    //If there are further rays, set diffuse RGB to color from diffuse ray\r\n    for (let sr of this.shadowRays) {\r\n      if (sr.getBlocked() == true) {\r\n      } else {\r\n        let li = sr.getLamp().getLampMaterial().getIntensity() / (sr.getLine().getRealLength() / 100 + 1) ** 2;\r\n        let col = sr.getLamp().getLampMaterial().getColor();\r\n        if (col[0] == \"#\") {\r\n          r = parseInt(col.slice(1, 3), 16);\r\n          g = parseInt(col.slice(3, 5), 16);\r\n          b = parseInt(col.slice(5, 7), 16);\r\n        }\r\n        //Diffuse\r\n        let difAngle = this.collisionAxis.getAngleBetween(sr.getLine().getDirection());\r\n        let difFactor = this.collisionObject.getMaterial().getDiffuse();\r\n        diffuse[0] += (difFactor * Math.cos(difAngle) * li * r) / 255;\r\n        diffuse[1] += (difFactor * Math.cos(difAngle) * li * g) / 255;\r\n        diffuse[2] += (difFactor * Math.cos(difAngle) * li * b) / 255;\r\n\r\n        //Specular\r\n        let specAngle = this.collisionLine.getDirection().getAngleBetween(sr.getLine().getDirection());\r\n        let specFactor = this.collisionObject.getMaterial().getSpecular();\r\n        let exponent = 2 ** ((1 - specFactor) * 8);\r\n        let korrFaktor = (exponent + 2) / (2 * Math.PI);\r\n        if (this.collisionLine.getDirection().getDot(sr.getLine().getDirection()) > 0) {\r\n          specular[0] += (korrFaktor * Math.cos(specAngle) ** exponent * li * r) / 10;\r\n          specular[1] += (korrFaktor * Math.cos(specAngle) ** exponent * li * g) / 10;\r\n          specular[2] += (korrFaktor * Math.cos(specAngle) ** exponent * li * b) / 10;\r\n        }\r\n      }\r\n    }\r\n    if (this.nextRay != null) {\r\n      let reflFactor = 1 - this.collisionObject.getMaterial().getDiffuse();\r\n      let col = this.nextRay.getReflectingIntensities();\r\n      reflect[0] += reflFactor * col[0];\r\n      reflect[1] += reflFactor * col[1];\r\n      reflect[2] += reflFactor * col[2];\r\n    }\r\n    if (this.shadowRays.length > 0) {\r\n      diffuse[0] /= this.shadowRays.length;\r\n      diffuse[1] /= this.shadowRays.length;\r\n      diffuse[2] /= this.shadowRays.length;\r\n      specular[0] /= this.shadowRays.length;\r\n      specular[1] /= this.shadowRays.length;\r\n      specular[2] /= this.shadowRays.length;\r\n    }\r\n    //Constant ambient\r\n    let ambient_intensity = 0.1;\r\n    let ambient = [255 * ambient_intensity, 255 * ambient_intensity, 255 * ambient_intensity];\r\n    let li = 0;\r\n    //Sum up Lamps intensities\r\n    // for (let sr of this.shadowRays) {\r\n    //   if (!sr.getBlocked()) {\r\n    //     li += sr.getLamp().getLampMaterial().getIntensity() / (sr.getLine().getRealLength() / 200 + 1) ** 2;\r\n    //   }\r\n    // }\r\n    //Get color from col object\r\n    if (this.collisionObject instanceof Rect) {\r\n      let color = this.collisionObject.getColor();\r\n      if (color[0] == \"#\") {\r\n        r = parseInt(color.slice(1, 3), 16);\r\n        g = parseInt(color.slice(3, 5), 16);\r\n        b = parseInt(color.slice(5, 7), 16);\r\n      }\r\n      //Add color  * lamp_intensity + ambient\r\n      //console.log(ambient, diffuse, specular);\r\n      r = ambient[0] + (r * diffuse[0]) / 2 + specular[0]; //+ reflect[0];\r\n      g = ambient[1] + (g * diffuse[1]) / 2 + specular[1]; //+ reflect[1];\r\n      b = ambient[2] + (b * diffuse[2]) / 2 + specular[2]; //+ reflect[2];\r\n    } else {\r\n      //If no collision, just use ambient\r\n      r = ambient[0];\r\n      g = ambient[1];\r\n      b = ambient[2];\r\n    }\r\n\r\n    //Constrain to int rgb\r\n    r = this.constrain255(Math.round(r));\r\n    g = this.constrain255(Math.round(g));\r\n    b = this.constrain255(Math.round(b));\r\n    this.reflectingIntensities = [r, g, b];\r\n    //console.log(this.reflectingIntensities);\r\n  }\r\n\r\n  private constrain255(x: number) {\r\n    return x < 0 ? 0 : x > 255 ? 255 : x;\r\n  }\r\n}\r\n","import { height, Main, width } from \"../app\";\r\nimport { DrawContext } from \"../gui_classes/DrawContext\";\r\nimport { Line } from \"./line\";\r\nimport { Rect } from \"./rect\";\r\nimport { Vector } from \"./vector\";\r\nimport { CollisionEvent, CollisionLineEvent, CollisionRectEvent } from \"./collisionEvent\";\r\nimport { Lamp } from \"./lamp\";\r\nimport { ShadowRay } from \"./shadowRay\";\r\nimport { Collision } from \"./collision\";\r\n\r\nexport class Ray {\r\n  private line: Line;\r\n  private id: string;\r\n\r\n  private depth: number;\r\n  private maxDepth: number;\r\n  private shadowRays: ShadowRay[];\r\n  private collisionObject: null | Line | Rect;\r\n  private collision: null | Collision;\r\n  private reflectingIntensities: [number, number, number];\r\n  // private rnds: number[];\r\n\r\n  constructor(position: Vector, direction: Vector, depth: number, maxDepth: number, id: string) {\r\n    this.line = new Line(position, direction, width + height);\r\n    this.id = id;\r\n    this.maxDepth = maxDepth;\r\n    this.depth = depth;\r\n    this.shadowRays = [];\r\n    this.collisionObject = null;\r\n    this.collision = null;\r\n    this.reflectingIntensities = [0, 0, 0];\r\n    // if (rnds.length < 1) {\r\n    //   this.rnds = [];\r\n    //   for (let i = 0; i < maxDepth; i++) {\r\n    //     this.rnds.push(Math.random());\r\n    //     this.rnds.push(Math.random());\r\n    //   }\r\n    // } else {\r\n    //   this.rnds = rnds;\r\n    // }\r\n  }\r\n\r\n  public getNextRay() {\r\n    if (this.collision != null) {\r\n      return this.collision.getNextRay();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public getShadowRays() {\r\n    return this.shadowRays;\r\n  }\r\n\r\n  public getLine() {\r\n    return this.line;\r\n  }\r\n\r\n  public getId() {\r\n    return this.id;\r\n  }\r\n\r\n  public getDepth() {\r\n    return this.depth;\r\n  }\r\n\r\n  public getMaxDepth() {\r\n    return this.maxDepth;\r\n  }\r\n\r\n  public getReflectingIntensities() {\r\n    if (this.collision != null) {\r\n      return this.collision.getReflectingIntensities();\r\n    }\r\n    return this.reflectingIntensities;\r\n  }\r\n\r\n  public draw(ctx: DrawContext, onlyCollision = false) {\r\n    if (!onlyCollision) {\r\n      ctx.pushStyle();\r\n      this.line.draw(ctx, this.id);\r\n      ctx.popStyle();\r\n    }\r\n\r\n    this.collision?.draw(ctx, onlyCollision);\r\n\r\n    // ctx.pushStyle();\r\n    // ctx.setStroke(ctx.getDrawState().getShadowRayColor());\r\n    // for (let i = 0; Main.Instance.getCTX().getDrawState().getDisplayShadowRays() && i < this.shadowRays.length; i++) {\r\n    //   this.shadowRays[i].draw(ctx);\r\n    // }\r\n    // ctx.popStyle();\r\n  }\r\n\r\n  private reset() {\r\n    this.collision = null;\r\n    this.shadowRays = [];\r\n    this.line = new Line(this.line.getPosition(), this.line.getDirection(), width + height);\r\n    this.collisionObject = null;\r\n  }\r\n  /**\r\n   * @description Recursive method to calculate all rays and ray collisions\r\n   * @param  {(Line|Rect)[]} collisionCollection Array with objects to collide with\r\n   * @param  {Lamp[]} lamps Array with all Lamps for shadow rays\r\n   */\r\n  public recalculateRay(collisionCollection: (Line | Rect)[], lamps: Lamp[]) {\r\n    this.reset();\r\n\r\n    //Calculate if collision happend an where and a collision axis\r\n    let collisionLine: Line | undefined;\r\n    let collisionAxis: Vector | undefined;\r\n    let colEvent: CollisionLineEvent | CollisionRectEvent;\r\n    for (let el of collisionCollection) {\r\n      if (el instanceof Line) {\r\n        colEvent = new CollisionLineEvent(this.line, el);\r\n        if (colEvent.getNewLines().length > 0) {\r\n          this.line = colEvent.getLine();\r\n          collisionLine = colEvent.getNewLines()[0];\r\n          this.collisionObject = colEvent.getObject();\r\n        }\r\n      } else if (el instanceof Rect) {\r\n        let intersects = el.getIntersect(this.line);\r\n        if (intersects != null && intersects.length > 0) {\r\n          for (let [x, y, t1, t2, line1, line2] of intersects) {\r\n            if (t2 != undefined && t2 > 0 && t2 < this.line.getLength()) {\r\n              let tempLine = new Line(this.line.getPosition(), this.line.getDirection(), t2);\r\n              if (tempLine.getRealLength() > 1) {\r\n                this.line = tempLine;\r\n                collisionAxis = line1.getNormal();\r\n                collisionLine = new Line(\r\n                  new Vector(x, y),\r\n                  line1.getNormal().getRotated(line1.getNormal().getAngleBetween(this.line.getDirection().getInverted())),\r\n                  1\r\n                );\r\n                this.collisionObject = el;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (collisionLine != undefined && this.collisionObject instanceof Rect && collisionAxis != undefined) {\r\n      this.collision = new Collision(\r\n        collisionLine.getPosition(),\r\n        this.collisionObject,\r\n        collisionLine,\r\n        collisionAxis,\r\n        this.depth,\r\n        this.maxDepth,\r\n        this,\r\n        this.id + \"_col\"\r\n      );\r\n      this.collision.recalculateRay(collisionCollection, lamps);\r\n    }\r\n    //If collision happend, do shadow rays, and further recursive rays\r\n    // if (collisionLine != undefined && this.depth < this.maxDepth) {\r\n    //   //Shadow Rays\r\n    //   for (let i = 0; i < lamps.length; i++) {\r\n    //     if (lamps[i].getOn() == false) continue;\r\n    //     this.shadowRays.push(\r\n    //       new ShadowRay(\r\n    //         this.line.getEndPosition(),\r\n    //         lamps[i].getPosition().getAddedVector(this.line.getEndPosition().getInverted()),\r\n    //         lamps[i],\r\n    //         this.id + \"_sr\" + i + \"_\" + this.depth.toString()\r\n    //       )\r\n    //     );\r\n    //     this.shadowRays[this.shadowRays.length - 1].recalculateRay(collisionCollection, lamps);\r\n    //   }\r\n    //   //Diffuse and specular rays\r\n    //   if (collisionAxis != undefined) {\r\n    //     let difAngle = 0;\r\n    //     let specAngle = 0;\r\n    //     if (this.collisionObject instanceof Rect) {\r\n    //       difAngle = ((this.rnds[this.depth * 2] * 2 - 1) * Math.PI) / 2;\r\n    //       let difDirection = collisionAxis.getRotated(difAngle).getNormalized();\r\n    //       let difRay = new Ray(\r\n    //         collisionLine.getPosition(),\r\n    //         difDirection,\r\n    //         this.depth + 1,\r\n    //         this.maxDepth,\r\n    //         this.id + \"_dif\" + (this.depth + 1).toString()\r\n    //       );\r\n    //       difRay.recalculateRay(collisionCollection, lamps);\r\n\r\n    //       specAngle = ((this.rnds[this.depth * 2 + 1] * 2 - 1) * /*1 -*/ this.collisionObject.getMaterial().getSpecular() * Math.PI) / 20;\r\n    //       let specDirection = collisionLine.getDirection().getRotated(specAngle).getNormalized();\r\n    //       let specRay = new Ray(\r\n    //         collisionLine.getPosition(),\r\n    //         specDirection,\r\n    //         this.depth + 1,\r\n    //         this.maxDepth,\r\n    //         this.id + \"_spec\" + (this.depth + 1).toString()\r\n    //       );\r\n    //       specRay.recalculateRay(collisionCollection, lamps);\r\n\r\n    //       this.nextRays.push(difRay);\r\n    //       this.nextRays.push(specRay);\r\n    //     } else {\r\n    //       //If no axis could be found, do mirror-like reflecting\r\n    //       this.nextRays.push(\r\n    //         new Ray(\r\n    //           collisionLine.getPosition(),\r\n    //           collisionLine.getDirection(),\r\n    //           this.depth + 1,\r\n    //           this.maxDepth,\r\n    //           this.id + \"_\" + (this.depth + 1).toString()\r\n    //         )\r\n    //       );\r\n    //       this.nextRays[this.nextRays.length - 1].recalculateRay(collisionCollection, lamps);\r\n    //     }\r\n\r\n    //     this.recalculateReflectingIntensities(difAngle, specAngle);\r\n    //   }\r\n    // } else {\r\n    //   this.recalculateReflectingIntensities(0, 0);\r\n    // }\r\n  }\r\n\r\n  /**\r\n   * @description Method to return the colors of ray collisions\r\n   * @param  {number} difAngle Angle of diffuse ray\r\n   * @param  {number} specAngle Angle of specular ray\r\n   */\r\n  public recalculateReflectingIntensities() {\r\n    //   let r = 0;\r\n    //   let g = 0;\r\n    //   let b = 0;\r\n    //   let diffuse = [0, 0, 0];\r\n    //   //If there are further rays, set diffuse RGB to color from diffuse ray\r\n    //   if (this.nextRays[0] != undefined && this.collisionObject instanceof Rect) {\r\n    //     diffuse = this.nextRays[0].getReflectingIntensities();\r\n    //     diffuse[0] *= Math.cos(difAngle) * (1 - this.collisionObject.getMaterial().getDiffuse() / 2);\r\n    //     diffuse[1] *= Math.cos(difAngle) * (1 - this.collisionObject.getMaterial().getDiffuse() / 2);\r\n    //     diffuse[2] *= Math.cos(difAngle) * (1 - this.collisionObject.getMaterial().getDiffuse() / 2);\r\n    //     // console.log(r, g, b);\r\n    //   }\r\n    //   //Constant ambient\r\n    //   let ambient = [255, 255, 255];\r\n    //   let ambient_intensity = 0.1;\r\n    //   let li = 0;\r\n    //   //Sum up Lamps intensities\r\n    //   for (let sr of this.shadowRays) {\r\n    //     if (!sr.getBlocked()) {\r\n    //       li += sr.getLamp().getLampMaterial().getIntensity() / (sr.getLine().getRealLength() / 200 + 1) ** 2;\r\n    //     }\r\n    //   }\r\n    //   //Get color from col object\r\n    //   if (this.collisionObject instanceof Rect) {\r\n    //     let color = this.collisionObject.getColor();\r\n    //     if (color[0] == \"#\") {\r\n    //       r = parseInt(color.slice(1, 3), 16);\r\n    //       g = parseInt(color.slice(3, 5), 16);\r\n    //       b = parseInt(color.slice(5, 7), 16);\r\n    //     }\r\n    //     //Add color  * lamp_intensity + ambient\r\n    //     r = li * (r + ambient_intensity * ambient[0] + diffuse[0]);\r\n    //     g = li * (g + ambient_intensity * ambient[1] + diffuse[1]);\r\n    //     b = li * (b + ambient_intensity * ambient[2] + diffuse[2]);\r\n    //   } else {\r\n    //     //If no collision, just use ambient\r\n    //     r = ambient_intensity * ambient[0];\r\n    //     g = ambient_intensity * ambient[1];\r\n    //     b = ambient_intensity * ambient[2];\r\n    //   }\r\n    //   //Constrain to int rgb\r\n    //   r = this.constrain255(Math.round(r));\r\n    //   g = this.constrain255(Math.round(g));\r\n    //   b = this.constrain255(Math.round(b));\r\n    //   this.reflectingIntensities = [r, g, b];\r\n    //   //console.log(this.reflectingIntensities);\r\n  }\r\n\r\n  private constrain255(x: number) {\r\n    return x < 0 ? 0 : x > 255 ? 255 : x;\r\n  }\r\n}\r\n","import { Vector } from \"../collision_classes/vector\";\r\nimport { DrawContext } from \"../gui_classes/DrawContext\";\r\n\r\nexport class ProjectLine {\r\n  private pos: Vector;\r\n  private dir: Vector;\r\n  private size: number;\r\n  private id: string;\r\n  private colors: string[];\r\n  constructor(pos: Vector, dir: Vector, size: number, id: string) {\r\n    this.pos = pos;\r\n    this.dir = dir;\r\n    this.size = size;\r\n    this.id = id;\r\n    this.colors = [\"#000000\"];\r\n  }\r\n\r\n  public getSize() {\r\n    return this.size;\r\n  }\r\n\r\n  public setSize(size: number) {\r\n    this.size = size;\r\n  }\r\n\r\n  public setColors(colors: string[]) {\r\n    this.colors = colors.length < 1 ? [\"#000000\"] : colors;\r\n  }\r\n\r\n  public setPosition(pos: Vector) {\r\n    this.pos = pos;\r\n  }\r\n\r\n  public setDirection(dir: Vector) {\r\n    this.dir = dir;\r\n  }\r\n\r\n  public draw(ctx: DrawContext) {\r\n    let delta = this.size / this.colors.length;\r\n    let width = 5;\r\n    let normal = this.dir.getNormal().getInverted();\r\n    ctx.pushStyle();\r\n    ctx.setFill(\"#808080\");\r\n    ctx.addRect(\r\n      this.pos.getAddedVector(this.dir.getMult(0)).getX(),\r\n      this.pos.getAddedVector(this.dir.getMult(0)).getY(),\r\n      this.pos.getAddedVector(this.dir.getMult(width)).getX(),\r\n      this.pos.getAddedVector(this.dir.getMult(width)).getY(),\r\n      this.pos.getAddedVector(this.dir.getMult(width).getAddedVector(normal.getMult(this.size))).getX(),\r\n      this.pos.getAddedVector(this.dir.getMult(width).getAddedVector(normal.getMult(this.size))).getY(),\r\n      this.pos.getAddedVector(this.dir.getMult(0).getAddedVector(normal.getMult(this.size))).getX(),\r\n      this.pos.getAddedVector(this.dir.getMult(0).getAddedVector(normal.getMult(this.size))).getY(),\r\n      this.id + \"_bg\"\r\n    );\r\n    for (let i = 0; i < this.colors.length; i++) {\r\n      ctx.setFill(this.colors[i]);\r\n      ctx.setStroke(\"none\");\r\n      ctx.addRect(\r\n        this.pos.getAddedVector(this.dir.getMult(0).getAddedVector(normal.getMult(delta * i))).getX(),\r\n        this.pos.getAddedVector(this.dir.getMult(0).getAddedVector(normal.getMult(delta * i))).getY(),\r\n        this.pos.getAddedVector(this.dir.getMult(width).getAddedVector(normal.getMult(delta * i))).getX(),\r\n        this.pos.getAddedVector(this.dir.getMult(width).getAddedVector(normal.getMult(delta * i))).getY(),\r\n        this.pos.getAddedVector(this.dir.getMult(width).getAddedVector(normal.getMult(delta * i + delta))).getX(),\r\n        this.pos.getAddedVector(this.dir.getMult(width).getAddedVector(normal.getMult(delta * i + delta))).getY(),\r\n        this.pos.getAddedVector(this.dir.getMult(0).getAddedVector(normal.getMult(delta * i + delta))).getX(),\r\n        this.pos.getAddedVector(this.dir.getMult(0).getAddedVector(normal.getMult(delta * i + delta))).getY(),\r\n        this.id + \"_\" + i\r\n      );\r\n    }\r\n    ctx.popStyle();\r\n  }\r\n}\r\n","import { CANVAS } from \"../app\";\r\nimport { DrawContext } from \"./DrawContext\";\r\n\r\nexport class GUIDraw {\r\n  private static _instance: GUIDraw;\r\n  private redraw = false;\r\n\r\n  private constructor() {\r\n    CANVAS.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\r\n    CANVAS.setAttribute(\"version\", \"1.1\");\r\n    CANVAS.setAttribute(\"baseProfile\", \"full\");\r\n  }\r\n\r\n  public static get Instance() {\r\n    return this._instance || (this._instance = new this());\r\n  }\r\n\r\n  needRedraw() {\r\n    this.redraw = true;\r\n  }\r\n\r\n  draw(ctx: DrawContext) {\r\n    CANVAS.setAttribute(\"width\", ctx.getWidth().toString());\r\n    CANVAS.setAttribute(\"height\", ctx.getHeight().toString());\r\n    if (CANVAS.innerHTML == \"\" || this.redraw) {\r\n      //span.style.width = \"400px\";\r\n      //span.style.height = \"400px\";\r\n      //span.setAttribute(\"viewbox\", \"0 0 400 400\");\r\n      //console.log(\"Redraw\");\r\n      CANVAS.style.backgroundColor = ctx.getDrawState().getDarkMode() ? \"#000\" : \"#fff\";\r\n      CANVAS.innerHTML = ctx.getSVG(); //['<img src=\"', \"data:image/svg+xml;charset=utf-8,\" + encodeURIComponent(ctx.getSVG()), '\" title=\"', \"out.svg\", '\"/>'].join(\"\");\r\n\r\n      //GENERATE SVG as OUTPUT\r\n      let not_svg = document.getElementById(\"svg\") as HTMLImageElement;\r\n      if (false && not_svg != null) {\r\n        let clonedSvgElement = CANVAS.cloneNode(true) as SVGElement;\r\n        let outerHTML = clonedSvgElement.outerHTML,\r\n          blob = new Blob([outerHTML], { type: \"image/svg+xml;charset=utf-8\" });\r\n        let blobURL = URL.createObjectURL(blob);\r\n        not_svg.src = blobURL;\r\n      }\r\n\r\n      //output.insertBefore(span, null);\r\n    } else {\r\n      //canvas.innerHTML = ctx.getSVG(); //['<img src=\"', \"data:image/svg+xml;charset=utf-8,\" + encodeURIComponent(ctx.getSVG()), '\" title=\"', \"out.svg\", '\"/>'].join(\"\");\r\n    }\r\n    this.redraw = false;\r\n  }\r\n}\r\n","import { CANVAS, height, width } from \"../app\";\r\nimport { DrawContext } from \"src/gui_classes/DrawContext\";\r\nimport { Line } from \"./line\";\r\nimport { Rect } from \"./rect\";\r\nimport { Vector } from \"./vector\";\r\nimport { Ray } from \"./ray\";\r\nimport { Lamp } from \"./lamp\";\r\nimport { ContextMenuAttributes } from \"../gui_classes/ContextMenu\";\r\nimport { ProjectLine } from \"../render_classes/projectLine\";\r\nimport { GUIDraw } from \"../gui_classes/GUIDraw\";\r\n\r\n/**\r\n * @description Class which handles all of the camera\r\n * @param  {Vector} position Position of the camera\r\n * @param  {Vector} direction Direction of the camera\r\n * @param  {number} depth Starting depth for the first ray\r\n * @param  {number} maxDepth Maximum depth for the rays\r\n * @param  {string} id Identifikationstring for HTML\r\n */\r\nexport class Camera {\r\n  private pos: Vector;\r\n  private dir: Vector;\r\n  private id: string;\r\n  private name: string; //Displayed in SVG\r\n\r\n  private amount: number; //Number of ray\r\n  private angle: number; //View angle in which rays are created\r\n  private depth: number; //Starting depth fro rays\r\n  private maxDepth: number; //Maximum ray depth\r\n  private rays: Ray[]; //The Arrays witch all the rays\r\n  private oneRayMode: boolean; //A mode which only displays one ray, if true\r\n  private drawRays: boolean; //A mode which toggles ray visibility, visible if true\r\n  private rayIndex: number; //Current ray index for one ray mode\r\n\r\n  private projectLine: ProjectLine; //The screen on which the raytracing is displayed\r\n\r\n  constructor(position: Vector, direction: Vector, depth: number, maxDepth: number, id: string, name: string = \"\") {\r\n    this.pos = position;\r\n    this.dir = direction;\r\n    this.id = id;\r\n    this.name = name;\r\n    this.maxDepth = maxDepth;\r\n    this.depth = depth;\r\n    this.rays = [];\r\n    this.oneRayMode = false;\r\n    this.drawRays = true;\r\n    this.rayIndex = 0;\r\n\r\n    this.amount = 1;\r\n    this.angle = Math.PI / 2;\r\n    this.createRays();\r\n\r\n    this.projectLine = new ProjectLine(this.pos, this.dir, 50, this.id + \"_pl_\");\r\n  }\r\n\r\n  public getRays() {\r\n    return this.rays;\r\n  }\r\n\r\n  public getId() {\r\n    return this.id;\r\n  }\r\n\r\n  public getName() {\r\n    return this.name;\r\n  }\r\n\r\n  public getAmount() {\r\n    return this.amount;\r\n  }\r\n\r\n  public getAngle() {\r\n    return this.angle;\r\n  }\r\n\r\n  public getDepth() {\r\n    return this.depth;\r\n  }\r\n\r\n  public getMaxDepth() {\r\n    return this.maxDepth;\r\n  }\r\n  /**\r\n   * @desription Enables the mode in which only one ray is drawn at a time\r\n   * @param  {boolean} b New value of the mode, True = only one ray\r\n   */\r\n  public setOneRayMode(b: boolean) {\r\n    this.oneRayMode = b;\r\n  }\r\n  /**\r\n   * @description Sets if rays should be visible\r\n   * @param  {boolean} b New value, True = visible\r\n   */\r\n  public setDrawRays(b: boolean) {\r\n    this.drawRays = b;\r\n    GUIDraw.Instance.needRedraw();\r\n  }\r\n\r\n  public getRayIndex() {\r\n    return this.rayIndex;\r\n  }\r\n\r\n  public setRayIndex(x: number) {\r\n    this.rayIndex = x;\r\n  }\r\n  /**\r\n   * @description Increments the current ray index for one ray mode\r\n   */\r\n  public incrementRayIndex() {\r\n    this.rayIndex = this.rays.length > 0 ? (this.rayIndex + 1) % this.rays.length : 0;\r\n  }\r\n\r\n  public raysDraw(ctx: DrawContext, onlyCollision = false) {\r\n    if (this.oneRayMode && ctx.getDrawState().getAnimatedCamera() == false) {\r\n      return; //Do not draw Animation camera rays\r\n    }\r\n\r\n    //Draw Rays\r\n    if (!this.drawRays || !ctx.getDrawState().getDisplayRays() /*&& this.rays.length > 0*/) {\r\n      //this.rays[0].draw(ctx);\r\n      //this.rays[this.rays.length - 1].draw(ctx);\r\n    } else if (this.oneRayMode && this.rays.length > 0 && this.rayIndex >= 0 && this.rayIndex < this.rays.length) {\r\n      this.rays[this.rayIndex].draw(ctx, onlyCollision);\r\n    } else {\r\n      for (let r of this.rays) {\r\n        r.draw(ctx, onlyCollision);\r\n      }\r\n    }\r\n  }\r\n\r\n  public draw(ctx: DrawContext) {\r\n    if (this.oneRayMode && ctx.getDrawState().getAnimatedCamera() == false) {\r\n      return; //Do not draw Animation camera\r\n    }\r\n\r\n    //Draw Collisions\r\n    this.raysDraw(ctx, true);\r\n\r\n    //Draw Camera\r\n    let normalizedDir = this.dir.getNormalized();\r\n    let normal = normalizedDir.getNormal();\r\n    ctx.pushStyle();\r\n    ctx.setFill(ctx.getDrawState().getDarkMode() ? \"black\" : \"white\");\r\n    ctx.addCam(this.pos.getX(), this.pos.getY(), normalizedDir, 25, this.id, this.name, this);\r\n    ctx.popStyle();\r\n    //Draw Screen\r\n    this.projectLine.setColors(this.getRayColors());\r\n    this.projectLine.setPosition(this.pos.getAddedVector(normalizedDir.getMult(25).getAddedVector(normal.getMult(25))));\r\n    this.projectLine.setDirection(normalizedDir);\r\n    this.projectLine.draw(ctx);\r\n  }\r\n\r\n  //Move for mouse movements\r\n  move(x: number, y: number, dx: number, dy: number) {\r\n    //this.pos.add(dx, dy);\r\n    this.pos = new Vector(x - CANVAS.getBoundingClientRect().left, y - CANVAS.getBoundingClientRect().top);\r\n    this.createRays();\r\n  }\r\n\r\n  //Rotate for mouse movements\r\n  rotate(x: number, y: number, dx: number, dy: number) {\r\n    this.dir = new Vector(x - CANVAS.getBoundingClientRect().left - this.pos.getX(), y - CANVAS.getBoundingClientRect().top - this.pos.getY());\r\n    this.createRays();\r\n  }\r\n\r\n  /**\r\n   * @description Function that is called from the Context Menu\r\n   * @param  {string} func The id of the Context Element\r\n   * @param  {number} val The value of the Context Element\r\n   * @param  {any} e The mouse event from the Context Element\r\n   */\r\n  doFunction(func: string, val: number, e: any) {\r\n    if (func == \"rotate\") {\r\n      this.rotate(e.x, e.y, e.movementX, e.movementY);\r\n    } else if (func == \"rotation\") {\r\n      //Setting rotation from Context Menu Input Element\r\n      let numberPick = document.getElementById(\"numberPicker_rotation\") as HTMLInputElement;\r\n      if (numberPick == null) {\r\n      } else {\r\n        numberPick.oninput = () => {\r\n          let a = (Number(numberPick.value) / 180) * Math.PI;\r\n          this.dir = new Vector(Math.cos(a), Math.sin(a));\r\n          this.createRays();\r\n        };\r\n      }\r\n    } else if (func == \"rays\") {\r\n      //Setting number of rays from Context Menu Input Element\r\n      let numberPick = document.getElementById(\"numberPicker_rays\") as HTMLInputElement;\r\n      if (numberPick == null) {\r\n      } else {\r\n        numberPick.oninput = () => {\r\n          if (Number(numberPick.value) < 1) {\r\n            numberPick.value = \"1\";\r\n          }\r\n          this.setRays(Number(numberPick.value));\r\n          this.createRays();\r\n        };\r\n      }\r\n    } else if (func == \"rayDepth\") {\r\n      //Setting max ray depth from Context Menu Input Element\r\n      let numberPick = document.getElementById(\"numberPicker_rayDepth\") as HTMLInputElement;\r\n      if (numberPick == null) {\r\n      } else {\r\n        numberPick.oninput = () => {\r\n          if (Number(numberPick.value) < 1) {\r\n            numberPick.value = \"1\";\r\n          }\r\n          this.maxDepth = Number(numberPick.value);\r\n          this.createRays();\r\n          GUIDraw.Instance.needRedraw();\r\n        };\r\n      }\r\n    } else if (func == \"angle\") {\r\n      //Setting view angle from Context Menu Input Element\r\n      let numberPick = document.getElementById(\"numberPicker_angle\") as HTMLInputElement;\r\n      if (numberPick == null) {\r\n      } else {\r\n        numberPick.oninput = () => {\r\n          if (Number(numberPick.value) < 1) {\r\n            numberPick.value = \"1\";\r\n          } else if (Number(numberPick.value) > 90) {\r\n            numberPick.value = \"90\";\r\n          }\r\n          let a = (Number(numberPick.value) / 180) * Math.PI;\r\n          this.setRays(this.amount, a);\r\n          this.createRays();\r\n        };\r\n      }\r\n    } else if (func == \"draw_rays\") {\r\n      //Toggles ray visibility\r\n      this.setDrawRays(!this.drawRays);\r\n    } else if (func == \"new_rays\") {\r\n      //Calculates new rays\r\n      this.createRays();\r\n    }\r\n  }\r\n  /**\r\n   * @description Method to return ContextMenuAttributes array to the Context Menu\r\n   * @returns ContextMenuAttributes\r\n   */\r\n  getContextAttributes(): ContextMenuAttributes[] {\r\n    return [\r\n      { name: \"Rotation\", id: \"rotation\", type: \"number\", value: Math.round((Math.atan2(this.dir.getY(), this.dir.getX()) / Math.PI) * 180) },\r\n      { name: \"Rays\", id: \"rays\", type: \"number\", value: this.amount },\r\n      { name: \"Ray Depth\", id: \"rayDepth\", type: \"number\", value: this.maxDepth },\r\n      { name: \"Ray Angle\", id: \"angle\", type: \"number\", value: Math.round((this.angle / Math.PI) * 180) },\r\n      { name: \"Draw Rays\", id: \"draw_rays\", type: \"lever\", value: Number(this.drawRays) },\r\n      // { name: \"New Random Rays\", id: \"new_rays\", type: \"\", value: 0 },\r\n    ];\r\n  }\r\n  //\r\n\r\n  /**\r\n   * @description Clears rays\r\n   */\r\n  private reset() {\r\n    this.rays = [];\r\n  }\r\n\r\n  /**\r\n   * @description Set number and view angle of rays\r\n   * @param  {number=this.amount} n Number of Rays\r\n   * @param  {number=this.angle} a Viewing angle\r\n   */\r\n  public setRays(n: number = this.amount, a: number = this.angle) {\r\n    this.amount = n < 1 ? 1 : n;\r\n    this.angle = a;\r\n    this.createRays();\r\n  }\r\n  /**\r\n   * @description Resets rays, and generates new ones with the new properties\r\n   */\r\n  private createRays() {\r\n    this.reset();\r\n    let update = this.amount % 2 == 0 ? \"0\" : \"\";\r\n    if (this.amount > 1) {\r\n      for (let i = 0; i < this.amount; i++) {\r\n        this.rays[i] = new Ray(\r\n          this.pos,\r\n          this.dir.getRotated(-this.angle / 2 + (this.angle / (this.amount - 1)) * i),\r\n          0,\r\n          this.maxDepth,\r\n          this.id + \"_ray\" + update + i\r\n        );\r\n      }\r\n    } else {\r\n      this.rays[0] = new Ray(this.pos, this.dir, 0, this.maxDepth, this.id + \"_ray_single\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description Start of recursive Method to calculate all rays and ray collisions\r\n   * @param  {(Line|Rect)[]} collisionCollection Array with objects to collide with\r\n   * @param  {Lamp[]} lamps Array with all Lamps for shadow rays\r\n   */\r\n  public recalculateRay(collisionCollection: (Line | Rect)[], lamps: Lamp[]) {\r\n    if (this.oneRayMode && this.rays.length > 0 && this.rayIndex >= 0 && this.rayIndex < this.rays.length) {\r\n      //In one ray mode recalculate only current ray index ray\r\n      this.rays[this.rayIndex].recalculateRay(collisionCollection, lamps);\r\n    } else {\r\n      //Otherwise recalculate all rays\r\n      for (let r of this.rays) {\r\n        r.recalculateRay(collisionCollection, lamps);\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * @description Method to return the colors of ray collisions\r\n   * @return {colors} RGB values of current ray collision\r\n   */\r\n  private getRayColors() {\r\n    let colors = [];\r\n    for (let r of this.rays) {\r\n      let col = r.getReflectingIntensities();\r\n      let rh = Math.round(col[0]).toString(16).length == 1 ? \"0\" + col[0].toString(16) : col[0].toString(16);\r\n      let gh = Math.round(col[1]).toString(16).length == 1 ? \"0\" + col[1].toString(16) : col[1].toString(16);\r\n      let bh = Math.round(col[2]).toString(16).length == 1 ? \"0\" + col[2].toString(16) : col[2].toString(16);\r\n      colors.push(\"#\" + rh + gh + bh);\r\n    }\r\n    return colors;\r\n  }\r\n}\r\n","import { DrawContext } from \"../gui_classes/DrawContext\";\r\nimport { Vector } from \"./vector\";\r\nimport { ContextMenuAttributes } from \"../gui_classes/ContextMenu\";\r\nimport { CANVAS } from \"../app\";\r\nimport { LampMaterial } from \"../render_classes/lampMaterial\";\r\n\r\n/**\r\n * @description Lamps give light to the colors calculation if hit by shadow ray\r\n * @param  {Vector} position Starting Position\r\n * @param  {LampMaterial} lampMaterial Material of the lamp, handles intensity\r\n * @param  {string} id Identifikationstring for HTML\r\n */\r\nexport class Lamp {\r\n  private pos: Vector;\r\n  private id: string;\r\n  private delete: boolean; //Is true if it should be deleted\r\n\r\n  private lampMaterial: LampMaterial;\r\n  private on: boolean; //If true, lamp is on\r\n\r\n  constructor(position: Vector, lampMaterial: LampMaterial, id: string) {\r\n    this.pos = position;\r\n    this.lampMaterial = lampMaterial;\r\n    this.on = true;\r\n    this.id = id;\r\n    this.delete = false;\r\n  }\r\n\r\n  public getPosition() {\r\n    return this.pos;\r\n  }\r\n\r\n  public getLampMaterial() {\r\n    return this.lampMaterial;\r\n  }\r\n\r\n  public getOn() {\r\n    return this.on;\r\n  }\r\n\r\n  public getId() {\r\n    return this.id;\r\n  }\r\n\r\n  public getDelete() {\r\n    return this.delete;\r\n  }\r\n\r\n  public move(x: number, y: number, dx: number, dy: number) {\r\n    //this.pos.add(dx, dy);\r\n    this.pos = new Vector(x - CANVAS.getBoundingClientRect().left, y - CANVAS.getBoundingClientRect().top);\r\n  }\r\n\r\n  public onOff() {\r\n    this.on = !this.on;\r\n  }\r\n\r\n  public doFunction(func: string, val: number, e: any) {\r\n    switch (func) {\r\n      case \"move\":\r\n        this.move(e.x, e.y, e.movementX, e.movementY);\r\n        break;\r\n      case \"onOff\":\r\n        this.onOff();\r\n        break;\r\n      case \"intensity\":\r\n        let numberPick = document.getElementById(\"numberPicker_intensity\") as HTMLInputElement;\r\n        if (numberPick == null) {\r\n        } else {\r\n          numberPick.oninput = () => {\r\n            this.lampMaterial.setIntensity(Number(numberPick.value));\r\n            if (Number(numberPick.value) < 1) {\r\n              numberPick.value = \"1\";\r\n            } else if (Number(numberPick.value) > 100) {\r\n              numberPick.value = \"100\";\r\n            }\r\n          };\r\n        }\r\n        break;\r\n      case \"delete\":\r\n        this.delete = true;\r\n        break;\r\n    }\r\n  }\r\n\r\n  public getContextAttributes(): ContextMenuAttributes[] {\r\n    return [\r\n      { name: \"On/Off\", id: \"onOff\", type: \"lever\", value: Number(this.on) },\r\n      { name: \"Intensity\", id: \"intensity\", type: \"number\", value: this.lampMaterial.getIntensity() },\r\n      { name: \"Remove\", id: \"delete\", type: \"\", value: 0 },\r\n    ];\r\n  }\r\n\r\n  public draw(ctx: DrawContext) {\r\n    ctx.pushStyle();\r\n    ctx.setFill(\"#e0e0e0\");\r\n    if (this.on) {\r\n      if (ctx.getDrawState().getDarkMode()) {\r\n        ctx.setFill(\"#000000\");\r\n      } else {\r\n        ctx.setFill(\"#ffffff\");\r\n      }\r\n    }\r\n    ctx.addCircle(this.pos.getX(), this.pos.getY(), 7, this.id + \"_0\" + (this.on ? \"\" : \"_off\"), this);\r\n    ctx.popStyle();\r\n    ctx.pushStyle();\r\n    ctx.addLine(this.pos.getX() - 5, this.pos.getY() - 5, this.pos.getX() + 5, this.pos.getY() + 5, this.id + \"_1\");\r\n    ctx.addLine(this.pos.getX() - 5, this.pos.getY() + 5, this.pos.getX() + 5, this.pos.getY() - 5, this.id + \"_2\");\r\n    ctx.popStyle();\r\n  }\r\n}\r\n","import { CONTEXT_MENU } from \"../app\";\r\nimport { Rect } from \"../collision_classes/rect\";\r\n\r\nexport class ContextElement {\r\n  private x: number;\r\n  private y: number;\r\n  private w: number;\r\n  private h: number;\r\n  private content: string;\r\n  private func: string;\r\n  private type: string;\r\n  private value: string | number;\r\n  private elem: any;\r\n  private textSize: number;\r\n\r\n  constructor(x: number, y: number, content: string, func: string, type: string, value: string | number, element: any, textSize: number = 16) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.content = content;\r\n    this.func = func;\r\n    this.type = type;\r\n    this.value = value;\r\n    this.elem = element;\r\n    this.textSize = textSize;\r\n    let p = document.createElement(\"p\");\r\n    p.textContent = content;\r\n    p.className = \"contextElement\";\r\n    p.style.fontSize = textSize + \"px\";\r\n    let b = p.getBoundingClientRect();\r\n    this.w = b.width;\r\n    this.h = b.height;\r\n    //console.log(this.h);\r\n  }\r\n\r\n  public getX() {\r\n    return this.x;\r\n  }\r\n\r\n  public getY() {\r\n    return this.y;\r\n  }\r\n\r\n  public getContent() {\r\n    return this.content;\r\n  }\r\n\r\n  public getWidth() {\r\n    return this.w;\r\n  }\r\n\r\n  public getHeight() {\r\n    return this.h;\r\n  }\r\n\r\n  public getHTMLElement() {\r\n    let p = document.createElement(\"div\");\r\n    p.textContent = this.content;\r\n    switch (this.type) {\r\n      case \"number\":\r\n        p.className = \"contextElement\";\r\n        p.style.fontSize = this.textSize + \"px\";\r\n\r\n        let numPick = document.createElement(\"input\");\r\n        numPick.type = \"number\";\r\n        numPick.id = \"numberPicker_\" + this.func;\r\n        numPick.className = \"contextElement_input\";\r\n        numPick.value = this.value.toString();\r\n        //CONTEXT_MENU.lastChild?.appendChild(colPick);\r\n        p.appendChild(numPick);\r\n        p.onclick = (e: any) => {\r\n          this.elem.doFunction(this.func, this.value, e);\r\n        };\r\n        break;\r\n      case \"color\":\r\n        p.className = \"contextElement\";\r\n        p.style.fontSize = this.textSize + \"px\";\r\n\r\n        let colPick = document.createElement(\"input\");\r\n        colPick.type = \"color\";\r\n        colPick.id = \"colorPicker_\" + this.func;\r\n        colPick.className = \"contextElement_input\";\r\n        // colPick.value = (this.elem as Rect).getColor();\r\n        colPick.value = this.value.toString();\r\n        //CONTEXT_MENU.lastChild?.appendChild(colPick);\r\n        p.appendChild(colPick);\r\n        p.onclick = (e: any) => {\r\n          this.elem.doFunction(this.func, this.value, e);\r\n        };\r\n        break;\r\n      case \"lever\":\r\n        p.className = \"contextElement\";\r\n        p.style.fontSize = this.textSize + \"px\";\r\n\r\n        let lever = document.createElement(\"div\");\r\n\r\n        //let lever = document.createElement(\"button\");\r\n        //lever.className = \"mdc-switch\";\r\n\r\n        //lever.setAttribute(\"width\", \"100px\");\r\n        lever.innerHTML = \"◯\"; //○◯⬯\r\n        if (this.value == 0) {\r\n          lever.className = \"contextElement_lever_off\";\r\n        } else {\r\n          lever.className = \"contextElement_lever_on\";\r\n        }\r\n        lever.style.fontSize = this.textSize * 0.75 + \"px\";\r\n        p.appendChild(lever);\r\n\r\n        p.onclick = (e: any) => {\r\n          if (lever.className == \"contextElement_lever_on\") {\r\n            lever.className = \"contextElement_lever_off\";\r\n            this.value = 0;\r\n          } else {\r\n            lever.className = \"contextElement_lever_on\";\r\n            this.value = 1;\r\n          }\r\n          this.elem.doFunction(this.func, this.value, e);\r\n        };\r\n        break;\r\n      default:\r\n        p.className = \"contextElement\";\r\n        p.style.fontSize = this.textSize + \"px\";\r\n        p.onclick = (e: any) => {\r\n          this.elem.doFunction(this.func, this.value, e);\r\n        };\r\n    }\r\n    return p;\r\n  }\r\n}\r\n","import { CANVAS, CONTEXT_MENU } from \"../app\";\r\nimport { ContextElement } from \"./ContextElement\";\r\n\r\n// export type ContextMenuAttributes = [string[], string[], string[], number[]];\r\nexport type ContextMenuAttributes = { name: string; id: string; type: string; value: string | number };\r\n\r\nexport class ContextMenu {\r\n  private x: number;\r\n  private y: number;\r\n  private w: number;\r\n  private h: number;\r\n\r\n  private elements: ContextElement[];\r\n\r\n  private static _instance: ContextMenu;\r\n\r\n  private constructor() {\r\n    this.x = 0;\r\n    this.y = 0;\r\n    this.w = 0;\r\n    this.h = 0;\r\n    this.elements = [];\r\n    this.setup();\r\n    this.updateStyle();\r\n  }\r\n\r\n  public static get Instance() {\r\n    return this._instance || (this._instance = new this());\r\n  }\r\n\r\n  private setup() {\r\n    CONTEXT_MENU.oncontextmenu = function (evt) {\r\n      evt.preventDefault();\r\n      evt.stopPropagation();\r\n    };\r\n  }\r\n\r\n  public reset() {\r\n    this.x = 0;\r\n    this.y = 0;\r\n    this.w = 0;\r\n    this.h = 0;\r\n    this.elements = [];\r\n    let lc = CONTEXT_MENU.lastChild;\r\n    while (lc != null) {\r\n      CONTEXT_MENU.removeChild(lc);\r\n      lc = CONTEXT_MENU.lastChild;\r\n    }\r\n    this.updateStyle();\r\n  }\r\n\r\n  public updateStyle() {\r\n    CONTEXT_MENU.style.left = (this.x + window.scrollX).toString() + \"px\";\r\n    CONTEXT_MENU.style.top = (this.y + window.scrollY).toString() + \"px\";\r\n    CONTEXT_MENU.style.width = this.w.toString() + \"px\";\r\n    if (this.w == 0) {\r\n      CONTEXT_MENU.style.display = \"none\";\r\n    } else {\r\n      CONTEXT_MENU.style.display = \"inline-block\";\r\n    }\r\n    //CONTEXT_MENU.style.height = this.h.toString() + \"px\";\r\n  }\r\n\r\n  public updateElements() {\r\n    for (let e of this.elements) {\r\n      CONTEXT_MENU.appendChild(e.getHTMLElement());\r\n    }\r\n  }\r\n\r\n  public draw(x: number, y: number, contents: ContextMenuAttributes[], element: any) {\r\n    this.reset();\r\n    for (let i = 0; i < contents.length; i++) {\r\n      this.elements.push(new ContextElement(x, y + 17 * i, contents[i].name, contents[i].id, contents[i].type, contents[i].value, element));\r\n    }\r\n    this.updateElements();\r\n    this.x = x - 5; //CANVAS.getBoundingClientRect().left + x;\r\n    this.y = y - 5; //CANVAS.getBoundingClientRect().top + y;\r\n    this.w = 175;\r\n    this.h = 23 * this.elements.length;\r\n    this.updateStyle();\r\n  }\r\n}\r\n","import { DrawContext } from \"./DrawContext\";\r\n\r\nexport class SVGStyle {\r\n  private stroke: string;\r\n  private fill: string;\r\n  private strokeWidth: string;\r\n\r\n  public constructor(ctx: DrawContext, stroke?: string, fill?: string, strokeWidth?: string) {\r\n    this.stroke = ctx.getDrawState().getDarkMode() ? \"white\" : \"black\";\r\n    this.fill = \"none\";\r\n    this.strokeWidth = \"1.5px\";\r\n  }\r\n\r\n  public setStroke(s: string) {\r\n    this.stroke = s;\r\n  }\r\n\r\n  public setFill(s: string) {\r\n    this.fill = s;\r\n  }\r\n\r\n  public setStrokeWidth(s: string) {\r\n    this.strokeWidth = s;\r\n  }\r\n\r\n  public getStroke() {\r\n    return this.stroke;\r\n  }\r\n\r\n  public getFill() {\r\n    return this.fill;\r\n  }\r\n\r\n  public getStrokeWidth() {\r\n    return this.strokeWidth;\r\n  }\r\n}\r\n","export class DrawState {\r\n  displayRays: boolean;\r\n  displayShadowRays: boolean;\r\n  displayColisionData: boolean;\r\n  shadowRayColor: string;\r\n  animatedCamera: boolean;\r\n  darkMode: boolean;\r\n\r\n  constructor() {\r\n    this.displayRays = true;\r\n    this.displayShadowRays = true;\r\n    this.displayColisionData = true;\r\n    this.shadowRayColor = \"#909090\";\r\n\r\n    this.animatedCamera = false;\r\n\r\n    this.darkMode = false;\r\n  }\r\n\r\n  setDisplayRays(b: boolean) {\r\n    this.displayRays = b;\r\n  }\r\n\r\n  getDisplayRays(): boolean {\r\n    return this.displayRays;\r\n  }\r\n\r\n  setDisplayShadowRays(b: boolean) {\r\n    this.displayShadowRays = b;\r\n  }\r\n\r\n  getDisplayShadowRays(): boolean {\r\n    return this.displayShadowRays;\r\n  }\r\n\r\n  setDisplayColisionData(b: boolean) {\r\n    this.displayColisionData = b;\r\n  }\r\n\r\n  getDisplayColisionData(): boolean {\r\n    return this.displayColisionData;\r\n  }\r\n\r\n  setAnimatedCamera(b: boolean) {\r\n    this.animatedCamera = b;\r\n  }\r\n\r\n  getAnimatedCamera(): boolean {\r\n    return this.animatedCamera;\r\n  }\r\n\r\n  setDarkMode(b: boolean) {\r\n    this.darkMode = b;\r\n  }\r\n\r\n  getDarkMode(): boolean {\r\n    return this.darkMode;\r\n  }\r\n\r\n  setShadowRayColor(b: string) {\r\n    this.shadowRayColor = b;\r\n  }\r\n\r\n  getShadowRayColor(): string {\r\n    return this.shadowRayColor;\r\n  }\r\n}\r\n","import { Rect } from \"../collision_classes/rect\";\r\nimport { CANVAS } from \"../app\";\r\nimport { ContextMenu } from \"./ContextMenu\";\r\nimport { GUIDraw } from \"./GUIDraw\";\r\nimport { SVGStyle } from \"./SVGStyle\";\r\nimport { Lamp } from \"../collision_classes/lamp\";\r\nimport { Camera } from \"../collision_classes/camera\";\r\nimport { DrawState } from \"./DrawState\";\r\nimport { Vector } from \"../collision_classes/vector\";\r\nimport { Collision } from \"../collision_classes/collision\";\r\n\r\nexport class DrawContext {\r\n  private svg: string;\r\n  private width: number;\r\n  private height: number;\r\n  private style: SVGStyle[];\r\n  private drawState: DrawState;\r\n\r\n  public constructor(width: number, height: number) {\r\n    this.svg = \"\";\r\n    this.width = width;\r\n    this.height = height;\r\n    this.style = [];\r\n    this.drawState = new DrawState();\r\n    this.style.push(new SVGStyle(this));\r\n  }\r\n\r\n  public getSVG() {\r\n    return this.svg; //`<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" baseProfile=\"full\" width=\"${this.width}px\" height=\"${this.height}px\">` + this.svg + `</svg>`;\r\n  }\r\n\r\n  public clearSVG() {\r\n    this.svg = \"\";\r\n  }\r\n\r\n  public getWidth() {\r\n    return this.width;\r\n  }\r\n\r\n  public getHeight() {\r\n    return this.height;\r\n  }\r\n\r\n  public pushStyle() {\r\n    this.style.push(new SVGStyle(this));\r\n  }\r\n\r\n  public popStyle() {\r\n    this.style.pop();\r\n  }\r\n\r\n  private getStyle() {\r\n    return this.style[this.style.length - 1];\r\n  }\r\n\r\n  public getDrawState() {\r\n    return this.drawState;\r\n  }\r\n\r\n  public setStroke(s: string) {\r\n    this.getStyle().setStroke(s);\r\n  }\r\n\r\n  public setFill(s: string) {\r\n    this.getStyle().setFill(s);\r\n  }\r\n\r\n  public addLine(x1: number, y1: number, x2: number, y2: number, id: string, dashed = false) {\r\n    this.svg += `\\n<line id=\"${id}\" x1=\"${x1}\" y1=\"${y1}\" x2=\"${x2}\" y2=\"${y2}\" stroke=\"${this.getStyle().getStroke()}\" \r\n    stroke-dasharray=\"${dashed ? \"8\" : \"\"}\"></line>`;\r\n    if (document.getElementById(id) == null) {\r\n      // let el = document.createElement(\"line\") as unknown as SVGLineElement;\r\n      // el.id = id;\r\n      // el.setAttribute(\"x1\", `${x1}`);\r\n      // el.setAttribute(\"y1\", `${y1}`);\r\n      // el.setAttribute(\"x2\", `${x2}`);\r\n      // el.setAttribute(\"y2\", `${y2}`);\r\n      // el.setAttribute(\"stroke\", `${this.getStyle().getStroke()}`);\r\n      // el.x1.baseVal.value = x1;\r\n      // el.y1.baseVal.value = y1;\r\n      // el.x2.baseVal.value = x2;\r\n      // el.y2.baseVal.value = y2;\r\n      // el.style.stroke = \"black\";\r\n      // canvas.insertBefore(el, null);\r\n      //GUIDraw.Instance.addElement(el); //`\\n<line id=\"${id}\" x1=\"${x1}\" y1=\"${y1}\" x2=\"${x2}\" y2=\"${y2}\" stroke=\"${this.getStyle().getStroke()}\" fill=\"${this.getStyle().getFill()}\" ></line>`\r\n      GUIDraw.Instance.needRedraw();\r\n    } else {\r\n      let el = document.getElementById(id) as unknown as SVGLineElement;\r\n      el.setAttribute(\"x1\", `${x1}`);\r\n      el.setAttribute(\"y1\", `${y1}`);\r\n      el.setAttribute(\"x2\", `${x2}`);\r\n      el.setAttribute(\"y2\", `${y2}`);\r\n      el.setAttribute(\"stroke\", `${this.getStyle().getStroke()}`);\r\n      // el.setAttribute(\"stroke-width\", `${this.get()}`);\r\n      // el.onclick = (e) => {\r\n      //   console.log(e.target);\r\n      // };\r\n    }\r\n  }\r\n\r\n  public addCam(x1: number, y1: number, direction: Vector, size: number, id: string, name: string, cam: Camera) {\r\n    let normal = direction.getNormal();\r\n    let pos = new Vector(x1, y1);\r\n    let v1 = pos.getAddedVector(direction.getMult(size / 3).getAddedVector(normal.getMult(size / 3)));\r\n    let v1_2 = pos.getAddedVector(direction.getMult(size / 3).getAddedVector(normal.getMult(-size / 3)));\r\n    let v2 = pos.getAddedVector(direction.getMult(size).getAddedVector(normal.getMult(size)));\r\n    let v3 = pos.getAddedVector(direction.getMult(size).getAddedVector(normal.getMult(-size)));\r\n    let v4 = pos.getAddedVector(direction.getMult(size / 3).getAddedVector(normal.getMult(-size * 1.2)));\r\n    let v5 = pos.getAddedVector(direction.getMult(-size).getAddedVector(normal.getMult(-size * 1.2)));\r\n    let v6 = pos.getAddedVector(direction.getMult(-size).getAddedVector(normal.getMult(size * 1.2)));\r\n    let v7 = pos.getAddedVector(direction.getMult(size / 3).getAddedVector(normal.getMult(size * 1.2)));\r\n\r\n    let vt = new Vector((v4.getX() + v5.getX() + v6.getX() + v7.getX()) / 4, (v4.getY() + v5.getY() + v6.getY() + v7.getY()) / 4);\r\n    vt.addVector(pos.getAddedVector(vt.getInverted()).getMult(0.5));\r\n\r\n    this.svg += `\\n<polygon id=\"${id}\" points=\"${v1.getX()},${v1.getY()} ${v2.getX()},${v2.getY()} ${v3.getX()},${v3.getY()} ${v1_2.getX()},${v1_2.getY()}\r\n    ${v4.getX()},${v4.getY()} ${v5.getX()},${v5.getY()} ${v6.getX()},${v6.getY()} ${v7.getX()},${v7.getY()}\" \r\n    stroke=\"${this.getStyle().getStroke()}\" fill=\"${this.getStyle().getFill()}\" draggable=\"true\"></polygon>\r\n    \r\n    <text x=\"${vt.getX()}\" y=\"${vt.getY()}\" \r\n    transform=\"rotate(${-(new Vector(0, 1).getAngleBetween(direction) / Math.PI) * 180},${vt.getX()},${vt.getY()})\"\r\n    fill=\"${this.getDrawState().getDarkMode() ? \"white\" : \"black\"}\">Camera ${name}</text>`;\r\n    if (document.getElementById(id) == null) {\r\n      GUIDraw.Instance.needRedraw();\r\n    } else {\r\n      let el = document.getElementById(id) as unknown as SVGPolygonElement;\r\n      el.setAttribute(\r\n        \"points\",\r\n        `${v1.getX()},${v1.getY()} ${v2.getX()},${v2.getY()} ${v3.getX()},${v3.getY()} ${v1_2.getX()},${v1_2.getY()}\r\n      ${v4.getX()},${v4.getY()} ${v5.getX()},${v5.getY()} ${v6.getX()},${v6.getY()} ${v7.getX()},${v7.getY()}`\r\n      );\r\n      el.setAttribute(\"stroke\", `${this.getStyle().getStroke()}`);\r\n      el.setAttribute(\"fill\", `${this.getStyle().getFill()}`);\r\n      // el.onclick = (e) => {\r\n      //   console.log(e.target);\r\n      // };\r\n      el.setAttribute(\"draggable\", \"true\");\r\n      el.ondrag = (e) => {\r\n        e.preventDefault();\r\n        if (e.buttons == 1 && e.shiftKey == false) cam.move(e.x, e.y, e.movementX, e.movementY);\r\n        if (e.buttons == 1 && e.shiftKey) cam.rotate(e.x, e.y, e.movementX, e.movementY);\r\n        if (e.buttons == 2) ContextMenu.Instance.draw(e.x, e.y, cam.getContextAttributes(), cam); //rect.rotate(e.x, e.y, e.movementX, e.movementY);\r\n      };\r\n    }\r\n  }\r\n\r\n  public addRect(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, x4: number, y4: number, id: string, rect?: Rect) {\r\n    let vt = new Vector((x1 + x2 + x3 + x4) / 4, (y1 + y2 + y3 + y4) / 4 + 4);\r\n\r\n    this.svg += `\\n<polygon id=\"${id}\" points=\"${x1},${y1} ${x2},${y2} ${x3},${y3} ${x4},${y4}\" stroke=\"${this.getStyle().getStroke()}\" fill=\"${this.getStyle().getFill()}\" draggable=\"${\r\n      rect != undefined\r\n    }\"></polygon>`;\r\n    if (rect != undefined) {\r\n      this.svg += `<text x=\"${vt.getX()}\" y=\"${vt.getY()}\">${rect?.getName()}</text>`;\r\n      //transform=\"rotate(${((rect?.getRotation()) / Math.PI) * 180 + 90},${vt.getX()},${vt.getY()})\"\r\n    }\r\n    if (document.getElementById(id) == null) {\r\n      GUIDraw.Instance.needRedraw();\r\n    } else {\r\n      let el = document.getElementById(id) as unknown as SVGPolygonElement;\r\n      el.setAttribute(\"points\", `${x1},${y1} ${x2},${y2} ${x3},${y3} ${x4},${y4}`);\r\n      el.setAttribute(\"stroke\", `${this.getStyle().getStroke()}`);\r\n      el.setAttribute(\"fill\", `${this.getStyle().getFill()}`);\r\n      // el.onclick = (e) => {\r\n      //   console.log(e.target);\r\n      // };\r\n      if (rect != undefined) {\r\n        el.setAttribute(\"draggable\", \"true\");\r\n        el.ondrag = (e) => {\r\n          e.preventDefault();\r\n          if (e.buttons == 1 && e.shiftKey == false) rect.move(e.x, e.y, e.movementX, e.movementY);\r\n          if (e.buttons == 1 && e.shiftKey) rect.rotate(e.x, e.y, e.movementX, e.movementY);\r\n          if (e.buttons == 2) ContextMenu.Instance.draw(e.x, e.y, rect.getContextAttributes(), rect); //rect.rotate(e.x, e.y, e.movementX, e.movementY);\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  public addCircle(x1: number, y1: number, r: number, id: string, lamp: Lamp) {\r\n    this.svg += `\\n<circle id=\"${id}\" cx=\"${x1}\" cy=\"${y1}\" r=\"${r}\" stroke=\"${this.getStyle().getStroke()}\" fill=\"${this.getStyle().getFill()}\" draggable=\"true\"></circle>`;\r\n    if (document.getElementById(id) == null) {\r\n      GUIDraw.Instance.needRedraw();\r\n    } else {\r\n      let el = document.getElementById(id) as unknown as SVGPolygonElement;\r\n      el.setAttribute(\"cx\", `${x1}`);\r\n      el.setAttribute(\"cy\", `${y1}`);\r\n      el.setAttribute(\"r\", `${r}`);\r\n      el.setAttribute(\"stroke\", `${this.getStyle().getStroke()}`);\r\n      el.setAttribute(\"fill\", `${this.getStyle().getFill()}`);\r\n      // el.onclick = (e) => {\r\n      //   console.log(e.target);\r\n      // };\r\n      el.setAttribute(\"draggable\", \"true\");\r\n      el.ondrag = (e) => {\r\n        e.preventDefault();\r\n        if (e.buttons == 1 && e.shiftKey == false) lamp.move(e.x, e.y, e.movementX, e.movementY);\r\n        if (e.buttons == 2) ContextMenu.Instance.draw(e.x, e.y, lamp.getContextAttributes(), lamp); //rect.rotate(e.x, e.y, e.movementX, e.movementY);\r\n      };\r\n    }\r\n  }\r\n\r\n  public addCollision(x1: number, y1: number, r: number, id: string, collision: Collision) {\r\n    this.svg += `\\n<circle id=\"${id}\" cx=\"${x1}\" cy=\"${y1}\" r=\"${r}\" stroke=\"${this.getStyle().getStroke()}\" fill=\"${this.getStyle().getFill()}\" draggable=\"false\"></circle>`;\r\n    if (document.getElementById(id) == null) {\r\n      GUIDraw.Instance.needRedraw();\r\n    } else {\r\n      let el = document.getElementById(id) as unknown as SVGPolygonElement;\r\n      el.setAttribute(\"cx\", `${x1}`);\r\n      el.setAttribute(\"cy\", `${y1}`);\r\n      el.setAttribute(\"r\", `${r}`);\r\n      el.setAttribute(\"stroke\", `${this.getStyle().getStroke()}`);\r\n      el.setAttribute(\"fill\", `${this.getStyle().getFill()}`);\r\n      // el.onclick = (e) => {\r\n      //   console.log(e.target);\r\n      // };\r\n      el.setAttribute(\"draggable\", \"false\");\r\n      el.ondrag = (e) => {\r\n        e.preventDefault();\r\n        //if (e.buttons == 2) ContextMenu.Instance.draw(e.x, e.y, collision.getContextAttributes(), collision); //rect.rotate(e.x, e.y, e.movementX, e.movementY);\r\n      };\r\n    }\r\n  }\r\n\r\n  public addText(x1: number, y1: number, text: string, id: string) {\r\n    this.svg += `<text id=\"${id}\" x=\"${x1}\" y=\"${y1}\" fill=\"${this.getStyle().getFill()}\" draggable=\"false\">${text}</text>`;\r\n    if (document.getElementById(id) == null) {\r\n      GUIDraw.Instance.needRedraw();\r\n    } else {\r\n      let el = document.getElementById(id) as unknown as SVGPolygonElement;\r\n      el.setAttribute(\"x\", `${x1}`);\r\n      el.setAttribute(\"y\", `${y1}`);\r\n      el.innerHTML = text;\r\n      el.setAttribute(\"style\", `fill: ${this.getStyle().getFill()};`);\r\n      // el.setAttribute(\"stroke\", `${this.getStyle().getStroke()}`);\r\n      // el.setAttribute(\"fill\", `${this.getStyle().getFill()}`);\r\n      el.setAttribute(\"draggable\", \"false\");\r\n    }\r\n  }\r\n\r\n  public addArrow(x1: number, y1: number, x2: number, y2: number, id: string) {\r\n    let dir = new Vector(x2 - x1, y2 - y1).getNormalized().getMult(-5);\r\n    let nor = dir.getNormal().getNormalized().getMult(5);\r\n    let v1 = new Vector(x2, y2).getAddedVector(dir).getAddedVector(nor);\r\n    let v2 = new Vector(x2, y2).getAddedVector(dir).getAddedVector(nor.getInverted());\r\n    this.svg += `<path id=\"${id}\" d=\"M ${x1},${y1} L ${x2},${y2} ${v1.getX()},${v1.getY()} ${x2},${y2} ${v2.getX()},${v2.getY()}\" \r\n                  stroke=\"${this.getStyle().getStroke()}\" fill=\"none\" draggable=\"false\"></path>`;\r\n    if (document.getElementById(id) == null) {\r\n      GUIDraw.Instance.needRedraw();\r\n    } else {\r\n      let el = document.getElementById(id) as unknown as SVGPolygonElement;\r\n      el.setAttribute(\"d\", `M ${x1},${y1} L ${x2},${y2} ${v1.getX()},${v1.getY()} ${x2},${y2} ${v2.getX()},${v2.getY()}`);\r\n      el.setAttribute(\"stroke\", `${this.getStyle().getStroke()}`);\r\n      el.setAttribute(\"fill\", `none`);\r\n      el.setAttribute(\"draggable\", \"false\");\r\n    }\r\n  }\r\n\r\n  public addArc(x1: number, y1: number, rx: number, ry: number, phi: number, lf: number, sf: number, x2: number, y2: number, id: string) {\r\n    this.svg += `<path id=\"${id}\" d=\"M ${x1},${y1} A ${rx},${ry},${phi},${lf},${sf},${x2},${y2}\" \r\n                  stroke=\"${this.getStyle().getStroke()}\" fill=\"none\" draggable=\"false\"></path>`;\r\n    if (document.getElementById(id) == null) {\r\n      GUIDraw.Instance.needRedraw();\r\n    } else {\r\n      let el = document.getElementById(id) as unknown as SVGPolygonElement;\r\n      el.setAttribute(\"d\", `M ${x1},${y1} A ${rx},${ry},${phi},${lf},${sf},${x2},${y2}`);\r\n      el.setAttribute(\"stroke\", `${this.getStyle().getStroke()}`);\r\n      el.setAttribute(\"fill\", `none`);\r\n      el.setAttribute(\"draggable\", \"false\");\r\n    }\r\n  }\r\n\r\n  addArc2(arcEnd2: Vector, arcMid2: Vector, arcMid1: Vector, arcEnd1: Vector, id: string) {\r\n    this.svg += `<path id=\"${id}\" d=\"M ${arcEnd2.getX()},${arcEnd2.getY()} C ${arcMid2.getX()},${arcMid2.getY()} ${arcMid1.getX()},${arcMid1.getY()} ${arcEnd1.getX()},${arcEnd1.getY()}\" \r\n                  stroke=\"${this.getStyle().getStroke()}\" fill=\"none\" draggable=\"false\"></path>`;\r\n    if (document.getElementById(id) == null) {\r\n      GUIDraw.Instance.needRedraw();\r\n    } else {\r\n      let el = document.getElementById(id) as unknown as SVGPolygonElement;\r\n      el.setAttribute(\r\n        \"d\",\r\n        `M ${arcEnd2.getX()},${arcEnd2.getY()} C ${arcMid2.getX()},${arcMid2.getY()} ${arcMid1.getX()},${arcMid1.getY()} ${arcEnd1.getX()},${arcEnd1.getY()}`\r\n      );\r\n      el.setAttribute(\"stroke\", `${this.getStyle().getStroke()}`);\r\n      el.setAttribute(\"fill\", `none`);\r\n      el.setAttribute(\"draggable\", \"false\");\r\n    }\r\n  }\r\n}\r\n","import { DrawContext } from \"./DrawContext\";\r\nimport { GUIDraw } from \"./GUIDraw\";\r\n\r\nexport class MainHelper {\r\n  protected ctx!: DrawContext;\r\n\r\n  doDraw() {\r\n    this.draw();\r\n    GUIDraw.Instance.draw(this.ctx);\r\n    this.ctx.clearSVG();\r\n  }\r\n\r\n  public getCTX() {\r\n    return this.ctx;\r\n  }\r\n\r\n  draw() {}\r\n}\r\n","export class Material {\r\n  private color: string;\r\n  private diffuse: number;\r\n  private specular: number;\r\n  constructor(color: string, diffuse: number = 1, specular: number = 0.5) {\r\n    this.color = color;\r\n    this.diffuse = diffuse;\r\n    this.specular = specular;\r\n  }\r\n\r\n  public getColor() {\r\n    return this.color;\r\n  }\r\n\r\n  public getDiffuse() {\r\n    return this.diffuse;\r\n  }\r\n\r\n  public getSpecular() {\r\n    return this.specular;\r\n  }\r\n\r\n  public setColor(color: string) {\r\n    this.color = color;\r\n  }\r\n\r\n  public setDiffuse(diffuse: number) {\r\n    this.diffuse = this.constrain(diffuse);\r\n  }\r\n\r\n  public setSpecular(specular: number) {\r\n    this.specular = this.constrain(specular);\r\n  }\r\n\r\n  //Constrain number between 0 and 1\r\n  private constrain(x: number) {\r\n    return x < 0 ? 0 : x > 1 ? 1 : x;\r\n  }\r\n}\r\n","export class LampMaterial {\r\n  private color: string;\r\n  private intensity: number;\r\n  constructor(color: string, intensity: number = 10) {\r\n    this.color = color;\r\n    this.intensity = intensity;\r\n  }\r\n\r\n  public getColor() {\r\n    return this.color;\r\n  }\r\n\r\n  public getIntensity() {\r\n    return this.intensity;\r\n  }\r\n\r\n  public setColor(color: string) {\r\n    this.color = color;\r\n  }\r\n\r\n  public setIntensity(intensity: number) {\r\n    this.intensity = this.constrain(intensity);\r\n  }\r\n\r\n  //Constrain number between 1 and 100\r\n  private constrain(x: number) {\r\n    return x < 1 ? 1 : x > 100 ? 100 : x;\r\n  }\r\n}\r\n","import { Rect } from \"../collision_classes/rect\";\r\nimport { CANVAS, CONTEXT_MENU, Main, NAMING } from \"../app\";\r\nimport { ContextMenu, ContextMenuAttributes } from \"./ContextMenu\";\r\nimport { GUIDraw } from \"./GUIDraw\";\r\nimport { Vector } from \"../collision_classes/vector\";\r\nimport { Lamp } from \"../collision_classes/lamp\";\r\nimport { Material } from \"../render_classes/material\";\r\nimport { LampMaterial } from \"../render_classes/lampMaterial\";\r\n\r\nexport function addDraggable(svg: HTMLElement) {\r\n  svg.addEventListener(\"mousedown\", startDrag);\r\n  svg.addEventListener(\"mousemove\", drag);\r\n  svg.addEventListener(\"mouseup\", endDrag);\r\n  svg.addEventListener(\"mouseleave\", leaveDrag);\r\n  svg.addEventListener(\"contextmenu\", prevent);\r\n\r\n  let spawn_id = 0;\r\n\r\n  //console.log(\"SVG is draggable\");\r\n\r\n  let selectedElement: HTMLElement | null = null;\r\n\r\n  function prevent(evt: MouseEvent) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n  }\r\n\r\n  function startDrag(evt: MouseEvent) {\r\n    let el = evt.target as HTMLElement;\r\n    // console.log(evt);\r\n    ContextMenu.Instance.reset();\r\n    if (el.getAttribute(\"draggable\")) {\r\n      selectedElement = el;\r\n      if (selectedElement.ondrag != null) selectedElement.ondrag(evt as DragEvent);\r\n    } else {\r\n      //ContextMenu.Instance.reset();\r\n      if (el.getAttribute(\"id\") == \"canvas\") {\r\n        canvasContextMenu(evt, el);\r\n      }\r\n    }\r\n  }\r\n\r\n  function drag(evt: MouseEvent) {\r\n    //console.log(evt);\r\n    if (selectedElement != null) {\r\n      if (selectedElement.ondrag != null) selectedElement.ondrag(evt as DragEvent);\r\n      GUIDraw.Instance.needRedraw();\r\n    }\r\n  }\r\n\r\n  function endDrag(evt: MouseEvent) {\r\n    selectedElement = null;\r\n    //ContextMenu.Instance.reset();\r\n  }\r\n\r\n  function leaveDrag(evt: MouseEvent) {\r\n    selectedElement = null;\r\n    let rect = CONTEXT_MENU.getBoundingClientRect();\r\n    if (evt.x < rect.left || evt.x > rect.right || evt.y < rect.top || evt.y > rect.bottom) ContextMenu.Instance.reset();\r\n  }\r\n\r\n  class CVS extends HTMLElement {\r\n    public doFunction(func: string, val: number, e: MouseEvent) {}\r\n  }\r\n\r\n  function canvasContextMenu(evt: MouseEvent, el: HTMLElement) {\r\n    (CANVAS as CVS).doFunction = doFunction;\r\n    let pos = evt.offsetX + evt.offsetY * CANVAS.getBoundingClientRect().width;\r\n    let attributes: ContextMenuAttributes[] = [\r\n      { name: \"New Rectangle\", id: \"rect\", type: \"\", value: pos },\r\n      { name: \"New Lamp\", id: \"lamp\", type: \"\", value: pos },\r\n    ];\r\n    if (evt.buttons == 2) ContextMenu.Instance.draw(evt.x, evt.y, attributes, el);\r\n  }\r\n\r\n  function doFunction(func: string, val: number, e: MouseEvent) {\r\n    //console.log(\"doing\", func);\r\n    switch (func) {\r\n      case \"rect\":\r\n        Main.Instance.collisionCollection.push(\r\n          new Rect(\r\n            new Vector(val % CANVAS.getBoundingClientRect().width, val / CANVAS.getBoundingClientRect().width),\r\n            50,\r\n            50,\r\n            0,\r\n            new Material(\"#ffffff\"),\r\n            \"spawned_rect\" + spawn_id++,\r\n            NAMING.pop()\r\n          )\r\n        );\r\n        break;\r\n      case \"lamp\":\r\n        Main.Instance.lampCollection.push(\r\n          new Lamp(\r\n            new Vector(val % CANVAS.getBoundingClientRect().width, val / CANVAS.getBoundingClientRect().width),\r\n            new LampMaterial(\"#ffffff\"),\r\n            \"spawned_lamp\" + spawn_id++\r\n          )\r\n        );\r\n        break;\r\n    }\r\n  }\r\n}\r\n","import { PANEL } from \"../app\";\r\n\r\nexport function SetupPanel() {\r\n  (PANEL.children.namedItem(\"render_slider_play\") as HTMLButtonElement).onclick = function () {\r\n    if (PANEL.getAttribute(\"play\") == \"true\") {\r\n      PANEL.setAttribute(\"play\", \"false\");\r\n      (this as HTMLDivElement).innerHTML = `<div class=\"mdc-icon-button__ripple\"></div>play_arrow`;\r\n    } else {\r\n      PANEL.setAttribute(\"play\", \"true\");\r\n      (this as HTMLDivElement).innerHTML = `<div class=\"mdc-icon-button__ripple\"></div>pause`;\r\n    }\r\n  };\r\n  const PANEL_DRAG = PANEL.children.namedItem(\"panel_drag\") as HTMLButtonElement;\r\n  PANEL_DRAG.onmousedown = function (e) {\r\n    (this as HTMLDivElement).setAttribute(\"dragging\", \"true\");\r\n  };\r\n  PANEL_DRAG.onmouseup = function (e) {\r\n    (this as HTMLDivElement).setAttribute(\"dragging\", \"false\");\r\n  };\r\n  PANEL_DRAG.onmousemove = function (e) {\r\n    //console.log(e);\r\n    if (PANEL_DRAG.getAttribute(\"dragging\") == \"true\") {\r\n      PANEL.style.left =\r\n        \"max(0px,min(calc(100vw - \" + PANEL.clientWidth + \"px),\" + (e.pageX - PANEL_DRAG.offsetLeft - PANEL_DRAG.clientWidth / 2).toString() + \"px))\";\r\n      PANEL.style.top =\r\n        \"max(0px,min(calc(150vh - \" + PANEL.clientHeight + \"px),\" + (e.pageY - PANEL_DRAG.offsetTop - PANEL_DRAG.clientHeight / 2).toString() + \"px))\";\r\n    }\r\n  };\r\n  PANEL_DRAG.onmouseleave = PANEL_DRAG.onmousemove;\r\n  PANEL_DRAG.onmouseout = PANEL_DRAG.onmousemove;\r\n}\r\n","import { CANVAS, Main, PANEL, SIDE_MENU } from \"../app\";\r\nimport { ContextElement } from \"./ContextElement\";\r\nimport { ContextMenuAttributes } from \"./ContextMenu\";\r\nimport { GUIDraw } from \"./GUIDraw\";\r\n\r\nexport class SideMenu {\r\n  private x: number;\r\n  private y: number;\r\n  private w: number;\r\n  private h: number;\r\n\r\n  private elements: ContextElement[];\r\n\r\n  private static _instance: SideMenu;\r\n\r\n  private constructor() {\r\n    this.x = 0;\r\n    this.y = 0;\r\n    this.w = 0;\r\n    this.h = 0;\r\n    this.elements = [];\r\n    this.setup();\r\n  }\r\n\r\n  public static get Instance() {\r\n    return this._instance || (this._instance = new this());\r\n  }\r\n\r\n  public updateStyle() {\r\n    SIDE_MENU.style.left = this.x.toString() + \"px\";\r\n    SIDE_MENU.style.top = this.y.toString() + \"px\";\r\n    SIDE_MENU.style.width = this.w.toString() + \"px\";\r\n    //SIDE_MENU.style.height = this.h.toString() + \"px\";\r\n  }\r\n\r\n  public updateElements() {\r\n    // for (let e of this.elements) {\r\n    for (let i = 0; i < this.elements.length; i++) {\r\n      SIDE_MENU.appendChild(this.elements[i].getHTMLElement());\r\n\r\n      //Spacer\r\n      //console.log(this.elements[i].getContent());\r\n      if ((this.elements[i + 1] && this.elements[i + 1].getContent().startsWith(\"Generate\")) || this.elements[i].getContent().startsWith(\"Generate\")) {\r\n        const el = document.createElement(\"div\");\r\n        el.className = \"contextElement_spacer\";\r\n        SIDE_MENU.appendChild(el);\r\n      }\r\n    }\r\n  }\r\n\r\n  private setup() {\r\n    let contents: ContextMenuAttributes[] = [\r\n      { name: \"Display Rays\", id: \"rays\", type: \"lever\", value: Number(Main.Instance.getCTX().getDrawState().getDisplayRays()) },\r\n      { name: \"Display Shadow Rays\", id: \"shadowRays\", type: \"lever\", value: Number(Main.Instance.getCTX().getDrawState().getDisplayShadowRays()) },\r\n      { name: \"Display Collision Data\", id: \"colData\", type: \"lever\", value: Number(Main.Instance.getCTX().getDrawState().getDisplayColisionData()) },\r\n      { name: \"Shadow Ray Color\", id: \"shadowRayColor\", type: \"color\", value: Main.Instance.getCTX().getDrawState().getShadowRayColor() },\r\n      { name: \"Display Animated Camera\", id: \"animCam\", type: \"lever\", value: Number(Main.Instance.getCTX().getDrawState().getAnimatedCamera()) },\r\n      { name: \"Generate SVG\", id: \"genSVG\", type: \"\", value: 0 },\r\n      { name: \"Dark Mode\", id: \"darkMode\", type: \"lever\", value: Number(Main.Instance.getCTX().getDrawState().getDarkMode()) },\r\n    ];\r\n\r\n    this.x = Number(SIDE_MENU.style.left);\r\n    this.y = Number(SIDE_MENU.style.top);\r\n\r\n    for (let i = 0; i < contents.length; i++) {\r\n      this.elements.push(new ContextElement(this.x, this.y + 17 * i, contents[i].name, contents[i].id, contents[i].type, contents[i].value, this));\r\n    }\r\n    this.updateElements();\r\n\r\n    this.w = 300;\r\n    this.h = 23 * this.elements.length;\r\n    this.updateStyle();\r\n  }\r\n\r\n  public doFunction(func: string, val: number, e: any) {\r\n    switch (func) {\r\n      case \"rays\":\r\n        Main.Instance.getCTX()\r\n          .getDrawState()\r\n          .setDisplayRays(val == 1);\r\n        GUIDraw.Instance.needRedraw();\r\n        break;\r\n      case \"shadowRays\":\r\n        Main.Instance.getCTX()\r\n          .getDrawState()\r\n          .setDisplayShadowRays(val == 1);\r\n        GUIDraw.Instance.needRedraw();\r\n        break;\r\n      case \"colData\":\r\n        Main.Instance.getCTX()\r\n          .getDrawState()\r\n          .setDisplayColisionData(val == 1);\r\n        GUIDraw.Instance.needRedraw();\r\n        break;\r\n      case \"darkMode\":\r\n        Main.Instance.getCTX()\r\n          .getDrawState()\r\n          .setDarkMode(val == 1);\r\n        if (val == 1) {\r\n          document.documentElement.style.setProperty(\"--text-color\", \"#c0c1c3\");\r\n          document.documentElement.style.setProperty(\"--background-color\", \"#36393f\");\r\n          document.documentElement.style.setProperty(\"--background-hover\", \"#727a86\");\r\n          document.body.style.backgroundColor = \"black\";\r\n        } else {\r\n          document.documentElement.style.setProperty(\"--text-color\", \"#151515\");\r\n          document.documentElement.style.setProperty(\"--background-color\", \"#b7bdc8\");\r\n          document.documentElement.style.setProperty(\"--background-hover\", \"#969fac\");\r\n          document.body.style.backgroundColor = \"white\";\r\n        }\r\n        GUIDraw.Instance.needRedraw();\r\n        break;\r\n      case \"shadowRayColor\":\r\n        let colPickSh = document.getElementById(\"colorPicker_shadowRayColor\") as HTMLInputElement;\r\n        colPickSh.oninput = () => {\r\n          Main.Instance.getCTX().getDrawState().setShadowRayColor(colPickSh.value);\r\n        };\r\n        GUIDraw.Instance.needRedraw();\r\n        break;\r\n      case \"genSVG\":\r\n        //GENERATE SVG and prompt download\r\n        let not_svg = document.getElementById(\"svg\") as HTMLImageElement;\r\n        if (not_svg != null) {\r\n          let clonedSvgElement = CANVAS.cloneNode(true) as SVGElement;\r\n          let style = document.createElement(\"style\");\r\n          style.innerHTML = `#canvas text {user-select: none;\r\n          font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\r\n          font-size: small;\r\n          text-anchor: middle;}`;\r\n          clonedSvgElement.appendChild(style);\r\n          let outerHTML = clonedSvgElement.outerHTML,\r\n            blob = new Blob([outerHTML], { type: \"image/svg+xml;charset=utf-8\" });\r\n          let blobURL = URL.createObjectURL(blob);\r\n\r\n          const link = document.createElement(\"a\");\r\n          link.style.display = \"none\";\r\n          link.href = blobURL;\r\n          link.download = \"image.svg\";\r\n\r\n          document.body.appendChild(link);\r\n          link.click();\r\n\r\n          setTimeout(() => {\r\n            URL.revokeObjectURL(link.href);\r\n            link.parentNode?.removeChild(link);\r\n          }, 0);\r\n\r\n          //not_svg.src = blobURL;\r\n        }\r\n        break;\r\n      case \"animCam\":\r\n        Main.Instance.getCTX()\r\n          .getDrawState()\r\n          .setAnimatedCamera(val == 1);\r\n        if (val == 1) {\r\n          PANEL.style.display = \"inherit\";\r\n        } else {\r\n          PANEL.style.display = \"none\";\r\n        }\r\n        GUIDraw.Instance.needRedraw();\r\n        break;\r\n    }\r\n  }\r\n}\r\n","import { Camera } from \"./collision_classes/camera\";\r\nimport { Lamp } from \"./collision_classes/lamp\";\r\nimport { Line } from \"./collision_classes/line\";\r\nimport { ShadowRay } from \"./collision_classes/shadowRay\";\r\nimport { Ray } from \"./collision_classes/ray\";\r\nimport { Rect } from \"./collision_classes/rect\";\r\nimport { Vector } from \"./collision_classes/vector\";\r\nimport { ContextMenu } from \"./gui_classes/ContextMenu\";\r\nimport { DrawContext } from \"./gui_classes/DrawContext\";\r\nimport { GUIDraw } from \"./gui_classes/GUIDraw\";\r\nimport { MainHelper } from \"./gui_classes/MainHelper\";\r\nimport { addDraggable } from \"./gui_classes/SVGDrag\";\r\nimport { Material } from \"./render_classes/material\";\r\nimport { LampMaterial } from \"./render_classes/lampMaterial\";\r\nimport { SetupPanel } from \"./gui_classes/PanelFunctions\";\r\nimport { SideMenu } from \"./gui_classes/SideMenu\";\r\nexport const CANVAS = document.getElementById(\"canvas\") as HTMLElement; //Global reference to SVG\r\nexport const CONTEXT_MENU = document.getElementById(\"contextMenu\") as HTMLDivElement; //Global reference to Context Menu\r\nexport const SIDE_MENU = document.getElementById(\"sideMenu\") as HTMLDivElement; //Global reference to Side Menu\r\nexport const PANEL = document.getElementById(\"panel\") as HTMLDivElement; //Global reference to Animation Panel\r\nexport const RENDER_SLIDER = PANEL.children.namedItem(\"render_slider\") as HTMLInputElement; //Global reference to Animation Slider\r\nexport const NAMING = \"abcdefghijklmnopqrstuvwxyz\".toUpperCase().split(\"\").reverse(); //Global Array for Naming Rects\r\n\r\nexport const width = 800; //Constant for width of SVG\r\nexport const height = 400; //Constant for height of SVG\r\n\r\nexport class Main extends MainHelper {\r\n  private static _instance: Main; //Self reference\r\n\r\n  public collisionCollection: (Line | Rect)[]; //Array which stores Rects and Lines of the scene\r\n  public lampCollection: Lamp[]; //Array which stores Lamps of the scene\r\n\r\n  private t: number; //Time incrementing value\r\n  // private rect1: Rect;\r\n  // private rect2: Rect;\r\n  private cam1: Camera; //Camera 1\r\n  private cam2: Camera; //Animation Camera\r\n  // private line1: Line;\r\n\r\n  private constructor() {\r\n    super();\r\n    this.collisionCollection = [];\r\n    this.lampCollection = [];\r\n    this.ctx = new DrawContext(width, height);\r\n    this.t = 0;\r\n    // this.rect1 = new Rect(new Vector(250, 250), 30, 150, 1.5, new Material(\"#00c0ff\"), \"rect1\");\r\n    let rect1 = new Rect(new Vector(250, 250), 30, 150, 1.5, new Material(\"#00c0ff\"), \"rect1\", NAMING.pop());\r\n    this.collisionCollection.push(rect1);\r\n    // this.rect2 = new Rect(new Vector(50, 150), 10, 300, Math.PI / 16, new Material(\"#ffc000\"), \"rect2\");\r\n    // this.collisionCollection.push(this.rect2);\r\n    // this.line1 = new Line(new Vector(0, 400), new Vector(1, -0.1), 800);\r\n    // this.collisionCollection.push(this.line1);\r\n\r\n    this.lampCollection.push(new Lamp(new Vector(300, 50), new LampMaterial(\"#ffffff\"), \"lamp1\"));\r\n\r\n    this.cam1 = new Camera(new Vector(100, 100), new Vector(1, 1), 0, 5, \"cam1\", \"1\");\r\n    this.cam1.setRays(1, (70 / 180) * Math.PI);\r\n    this.cam2 = new Camera(new Vector(500, 100), new Vector(-1, 0.6), 0, 5, \"cam2\", \"2\");\r\n    this.cam2.setRays(50, Math.PI / 2);\r\n    this.cam2.setOneRayMode(true);\r\n    this.cam2.setDrawRays(true);\r\n  }\r\n\r\n  public static get Instance() {\r\n    return this._instance || (this._instance = new this());\r\n  }\r\n\r\n  draw() {\r\n    // this.ctx.pushStyle();\r\n    // this.ctx.setStroke(\"red\");\r\n    // if (this.t % 200 > 100) this.ctx.setStroke(\"blue\");\r\n    // this.ctx.addLine(this.t % 400, 0, 300, 400, \"l3\");\r\n    // this.ctx.popStyle();\r\n    // if (this.t == 205) {\r\n    //   GUIDraw.Instance.needRedraw();\r\n    // }\r\n\r\n    //this.rect1.setRotation(this.t / 50);\r\n    //if (this.t % 1 == 0) this.rect1.updateLines();\r\n    // this.ctx.setFill(\"#00c0ff\");\r\n    // this.rect1.draw(this.ctx);\r\n    // this.ctx.setFill(\"#ffc000\");\r\n    // this.rect2.draw(this.ctx);\r\n    // this.ctx.setFill(\"none\");\r\n\r\n    // let l = this.rect1.getIntersect(new Line(new Vector(this.t % 400, 0), new Vector(this.t % 400, 0).getInverted().getAddedVector(new Vector(300, 400)), 1));\r\n    // this.ctx.pushStyle();\r\n    // this.ctx.setStroke(\"magenta\");\r\n    // for (let i = 0; i < l.length; i++) {\r\n    //   let l1 = l[i];\r\n    //   if (l1 != undefined) {\r\n    //     this.ctx.addLine(l1[0] - 5, l1[1] - 1, l1[0] + 5, l1[1] + 1, \"intersect\" + i);\r\n    //     this.ctx.addLine(l1[0] - 5, l1[1] + 1, l1[0] + 5, l1[1] - 1, \"intersect\" + i + \"_2\");\r\n    //   }\r\n    // }\r\n    // this.ctx.popStyle();\r\n\r\n    // this.line1.draw(this.ctx, \"line1\");\r\n\r\n    //\r\n    //#Clean-Up-Stage#\r\n    //\r\n\r\n    //Remove deleted Rects\r\n    for (let i = this.collisionCollection.length - 1; i >= 0; i--) {\r\n      let col = this.collisionCollection[i];\r\n      if (col instanceof Rect) {\r\n        if (col.getDelete()) {\r\n          NAMING.push(col.getName());\r\n          this.collisionCollection.splice(i, 1);\r\n          GUIDraw.Instance.needRedraw();\r\n        }\r\n      }\r\n    }\r\n\r\n    //Remove deleted Lamps\r\n    for (let i = this.lampCollection.length - 1; i >= 0; i--) {\r\n      if (this.lampCollection[i].getDelete()) {\r\n        this.lampCollection.splice(i, 1);\r\n        GUIDraw.Instance.needRedraw();\r\n      }\r\n    }\r\n\r\n    //\r\n    //#Calulation-Stage#\r\n    //\r\n\r\n    //Recalculate the Rays of the camera and draw them\r\n    this.cam1.recalculateRay(this.collisionCollection, this.lampCollection);\r\n\r\n    //Animate the camera 2\r\n    //if (this.t % 1 == 0) this.cam2.incrementRayIndex();\r\n    if (PANEL.getAttribute(\"play\") == \"true\") RENDER_SLIDER.value = ((Number(RENDER_SLIDER.value) + 1) % Number(RENDER_SLIDER.max)).toString();\r\n    RENDER_SLIDER.max = (this.cam2.getAmount() - 1).toString();\r\n    this.cam2.setRayIndex(Number(RENDER_SLIDER.value));\r\n\r\n    //Recalculate the Rays of the animation camera and draw them\r\n    this.cam2.recalculateRay(this.collisionCollection, this.lampCollection);\r\n\r\n    //\r\n    //#Draw-Stage#\r\n    //\r\n\r\n    //Draw Rays\r\n    this.cam1.raysDraw(this.ctx);\r\n    this.cam2.raysDraw(this.ctx);\r\n\r\n    //Draw Rects And Lines\r\n    let l_idx = 0;\r\n    for (let l of this.collisionCollection) {\r\n      if (l instanceof Line) {\r\n        this.ctx.pushStyle();\r\n        l.draw(this.ctx, \"line_\" + l_idx++);\r\n        this.ctx.popStyle();\r\n      } else {\r\n        l.draw(this.ctx);\r\n      }\r\n    }\r\n\r\n    //Draw Lamps\r\n    for (let l of this.lampCollection) {\r\n      l.draw(this.ctx);\r\n    }\r\n\r\n    //Draw Cameras\r\n    this.cam1.draw(this.ctx);\r\n    this.cam2.draw(this.ctx);\r\n\r\n    //Increment Time\r\n    this.t++;\r\n  }\r\n}\r\n\r\nMain.Instance;\r\nSideMenu.Instance;\r\nContextMenu.Instance;\r\n//Setup Panel\r\nSetupPanel();\r\n//Setup Canvas\r\naddDraggable(CANVAS);\r\n//Setup loop\r\nlet time = new Date().getTime();\r\nsetInterval(loop, 33.3);\r\n\r\nfunction loop() {\r\n  Main.Instance.doDraw();\r\n  // time = new Date().getTime();\r\n  // setTimeout(\r\n  //   () => {\r\n  //     loop();\r\n  //   },\r\n  //   new Date().getTime() - time < 33.3 ? 33.3 - new Date().getTime() + time : 0\r\n  //   // () => {\r\n  //   //   console.log(new Date().getTime() - time < 33.3 ? 33.3 - new Date().getTime() + time : 0);\r\n  //   //   return ;\r\n  //   // } //min 33.3ms wait\r\n  // );\r\n}\r\n"]}